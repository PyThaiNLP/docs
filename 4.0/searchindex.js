Search.setIndex({"docnames": ["api/augment", "api/benchmarks", "api/corpus", "api/generate", "api/khavee", "api/parse", "api/soundex", "api/spell", "api/summarize", "api/tag", "api/tokenize", "api/tools", "api/translate", "api/transliterate", "api/ulmfit", "api/util", "api/wangchanberta", "api/word_vector", "index", "notes/FAQ", "notes/command_line", "notes/getting_started", "notes/installation", "notes/license"], "filenames": ["api/augment.rst", "api/benchmarks.rst", "api/corpus.rst", "api/generate.rst", "api/khavee.rst", "api/parse.rst", "api/soundex.rst", "api/spell.rst", "api/summarize.rst", "api/tag.rst", "api/tokenize.rst", "api/tools.rst", "api/translate.rst", "api/transliterate.rst", "api/ulmfit.rst", "api/util.rst", "api/wangchanberta.rst", "api/word_vector.rst", "index.rst", "notes/FAQ.rst", "notes/command_line.rst", "notes/getting_started.rst", "notes/installation.rst", "notes/license.rst"], "titles": ["pythainlp.augment", "pythainlp.benchmarks", "pythainlp.corpus", "pythainlp.generate", "pythainlp.khavee", "pythainlp.parse", "pythainlp.soundex", "pythainlp.spell", "pythainlp.summarize", "pythainlp.tag", "pythainlp.tokenize", "pythainlp.tools", "pythainlp.translate", "pythainlp.transliterate", "pythainlp.ulmfit", "pythainlp.util", "pythainlp.wangchanberta", "pythainlp.word_vector", "PyThaiNLP documentation", "FAQ", "Command Line", "Getting Started", "Installation", "License"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21], "textaug": [0, 22], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "thai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22], "text": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22], "thi": [0, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 21, 22, 23], "function": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 20, 22], "task": [0, 1, 16, 21], "class": [0, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "wordnetaug": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23], "us": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 23], "wordnet": [0, 22], "__init__": [0, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "find_synonym": 0, "word": [0, 1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 20, 21, 22], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "po": [0, 2, 5, 9, 10, 16, 20], "none": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17], "postag_corpu": 0, "orchid": [0, 9, 10], "list": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 21], "find": [0, 2, 4, 7, 10, 15, 17, 22], "synonym": [0, 2], "from": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "part": [0, 2, 9, 10, 15, 16, 20], "speech": [0, 2, 9, 15, 16, 20], "type": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 22], "postag": 0, "corpu": [0, 3, 7, 8, 9, 10, 12, 15, 16, 18, 20, 22, 23], "name": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 17, 22], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "sentenc": [0, 7, 8, 9, 11, 15, 17, 21], "token": [0, 2, 5, 8, 9, 14, 16, 17, 18, 20, 21, 22], "object": [0, 2, 4, 7, 8, 10, 14, 15, 17], "word_token": [0, 1, 8, 10, 14, 21], "max_syn_s": 0, "int": [0, 2, 3, 4, 6, 7, 8, 9, 10, 14, 15], "6": [0, 2, 6, 11, 15, 22], "bool": [0, 1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 15, 16, 17], "true": [0, 1, 2, 3, 4, 8, 9, 10, 13, 14, 15, 16, 17, 22], "max": 0, "number": [0, 3, 7, 8, 9, 11, 15], "tupl": [0, 2, 7, 8, 9, 15, 16, 17], "exampl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22], "import": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 21], "aug": 0, "\u0e40\u0e23\u0e32\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 0, "\u0e22\u0e19": [0, 2, 9, 10, 13, 15], "output": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "\u0e40\u0e23\u0e32": [0, 9, 21], "\u0e0a\u0e2d\u0e1a": [0, 15], "\u0e44\u0e1b": [0, 2, 9, 15], "\u0e23": [0, 2, 3, 6, 7, 8, 9, 10, 17, 20, 21], "\u0e23\u0e23": 0, "\u0e42\u0e23\u0e07\u0e40\u0e23": [0, 9, 15], "\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e40\u0e23": 0, "\u0e44\u0e1b\u0e22": 0, "\u0e07": [0, 2, 4, 6, 7, 8, 9, 10, 15, 20], "word2vec": [0, 17], "word2vecaug": 0, "model": [0, 2, 5, 8, 9, 10, 12, 14, 16, 17, 22, 23], "file": [0, 2, 10, 14, 15, 20, 22, 23], "path": [0, 2, 10, 11, 15, 20, 22], "moodel": 0, "binari": 0, "modify_s": 0, "sent": [0, 2, 3, 9, 11, 15, 20], "p": [0, 9, 13, 15], "float": [0, 1, 2, 3, 7, 8, 11, 15, 17], "0": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 20, 22, 23], "7": [0, 9, 15, 16], "probabl": [0, 3, 7], "n_sent": 0, "1": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 20, 22, 23], "thai2fitaug": 0, "thai2fit": [0, 3, 17, 22], "github": [0, 2, 5, 8, 10, 12, 13, 15, 16, 18, 19], "com": [0, 2, 8, 9, 10, 12, 15, 16], "cstorm125": 0, "load_w2v": 0, "load": [0, 10, 12, 14, 17], "\u0e1c\u0e21\u0e40\u0e23": 0, "2": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 22, 23], "5": [0, 2, 6, 7, 8, 9, 11, 14, 15, 17, 20, 22], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32": [0, 10], "\u0e40\u0e23": [0, 2, 4, 9, 10, 17], "\u0e09": [0, 4, 9, 10, 12, 20], "\u0e19": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 17, 20, 21], "ltw2vaug": 0, "ltw2v": [0, 17], "larg": [0, 8, 17], "thaiword2vec": 0, "\u0e40\u0e02\u0e32": [0, 9, 17], "\u0e22\u0e19\u0e2b\u0e19": 0, "\u0e07\u0e2a": [0, 9, 20], "\u0e2d": [0, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 17, 20], "\u0e2a\u0e21": [0, 9], "\u0e04\u0e23\u0e40\u0e23": 0, "lm": 0, "fasttextaug": 0, "model_path": [0, 14], "fasttext": 0, "you": [0, 2, 5, 9, 10, 15, 16, 18, 19, 20, 21, 22, 23], "want": [0, 1, 2, 5, 13, 15, 16], "download": [0, 2, 11, 12, 20, 22], "http": [0, 2, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 22, 23], "cc": [0, 2, 9, 23], "doc": [0, 8, 10, 14, 15], "en": [0, 2, 12, 15], "crawl": 0, "vector": [0, 8, 14, 17, 21, 22], "html": [0, 2, 9, 14, 15, 16], "thai2transformersaug": 0, "gener": [0, 2, 10, 13, 15, 18, 22], "num_replace_token": 0, "3": [0, 2, 3, 5, 6, 8, 9, 10, 14, 15, 20, 22], "wangchanberta": [0, 8, 9, 10, 18, 22], "replac": [0, 14, 15], "\u0e0a": [0, 3, 6, 7, 8, 9, 10, 15], "\u0e32\u0e07\u0e21": 0, "\u0e17": [0, 2, 8, 9, 15, 20], "\u0e07\u0e2b\u0e21\u0e14": [0, 9, 15], "50": [0, 15], "\u0e15": [0, 2, 6, 7, 8, 9, 13, 15, 17, 20], "\u0e27": [0, 4, 6, 7, 8, 9, 10, 14, 15, 17, 20], "\u0e1a\u0e19": [0, 9], "\u0e1a\u0e19\u0e42\u0e25\u0e01\u0e43\u0e1a\u0e19": 0, "\u0e1a\u0e19\u0e2a": 0, "\u0e14": [0, 2, 5, 7, 8, 9, 10, 13, 15, 17, 20], "\u0e1a\u0e19\u0e1a\u0e01": 0, "\u0e1a\u0e19\u0e19": 0, "\u0e1a\u0e19\u0e2b": 0, "bpemb_wv": 0, "bpembaug": 0, "lang": [0, 2, 13, 14], "th": [0, 2, 5, 6, 7, 9, 12, 14, 15], "v": [0, 2, 10, 15], "100000": 0, "dim": 0, "300": [0, 17], "bpemb": 0, "bheinzerl": 0, "\u0e1c\u0e21\u0e2a\u0e2d\u0e19": 0, "\u0e1c\u0e21\u0e40\u0e02": 0, "\u0e32\u0e40\u0e23": 0, "contain": [1, 2, 9, 10, 11, 15, 17], "util": [1, 7, 10, 14, 18], "relat": [1, 2, 14, 17], "nlp": [1, 12, 18, 21], "At": 1, "moment": 1, "we": [1, 2, 9, 15, 16, 17, 22], "have": [1, 14, 17, 21, 22], "onli": [1, 2, 6, 8, 9, 10, 13, 15, 17, 22], "other": [1, 8, 9, 13, 15, 17, 21, 23], "ad": [1, 10, 14, 15], "soon": 1, "qualit": 1, "evalu": 1, "compute_stat": 1, "ref_sampl": 1, "raw_sampl": 1, "dict": [1, 2, 7, 9, 10, 13, 14, 15], "comput": [1, 2, 8, 17], "statist": [1, 6], "These": [1, 15], "includ": [1, 2, 8, 9, 10, 14, 15, 21, 23], "charact": [1, 7, 10, 13, 14, 15], "level": [1, 5, 14, 15], "posit": [1, 10, 15, 17], "fals": [1, 2, 3, 4, 8, 9, 10, 12, 13, 14, 15, 16, 17, 22], "neg": [1, 9, 17], "precis": [1, 15, 20], "recal": [1, 20], "f1": 1, "correct": [1, 4, 7, 10, 15], "indic": [1, 2, 9, 13, 15, 21], "sequenc": [1, 14, 15], "correspod": 1, "correctli": [1, 7], "ground": 1, "truth": 1, "sampl": [1, 10, 20], "metric": [1, 7], "datafram": 1, "performac": 1, "pleas": [1, 2, 8, 18, 23], "see": [1, 2, 8, 10, 13, 14, 15, 22, 23], "being": [1, 15], "row": 1, "x": [1, 9, 15], "col": 1, "len": [1, 2, 9], "panda": 1, "preprocess": [1, 15], "txt": [1, 2, 10, 11, 14, 20], "remove_spac": [1, 14], "clean": [1, 14, 15], "up": [1, 13], "befor": [1, 9, 10, 14, 15, 22], "perform": [1, 2, 10, 21, 22], "whether": 1, "remov": [1, 2, 7, 14, 15], "white": 1, "space": [1, 9, 10, 14, 15, 21], "provid": [2, 7, 14], "access": [2, 10], "come": 2, "countri": 2, "frozenset": 2, "\u0e41\u0e04\u0e19\u0e32\u0e14\u0e32": 2, "\u0e42\u0e23\u0e21\u0e32\u0e40\u0e19": 2, "\u0e22": [2, 3, 7, 8, 9, 10, 14, 15, 20], "\u0e41\u0e2d\u0e25\u0e08": 2, "\u0e25\u0e32\u0e27": [2, 17], "dev": 2, "countries_th": 2, "rtype": [2, 10, 13, 14], "get_corpu": 2, "filenam": 2, "as_i": 2, "read": [2, 5, 16, 19, 22], "data": [2, 11, 14, 15, 17, 20, 22], "each": [2, 8, 9, 10, 15, 17, 22], "line": [2, 15, 18, 22], "member": [2, 14], "set": [2, 7, 9, 10, 14, 15, 21, 22], "By": [2, 7, 8, 11, 15, 22], "default": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 22], "whitespac": [2, 10, 15], "strip": 2, "empti": [2, 14, 15], "valu": [2, 3, 7, 9, 10, 15], "duplic": [2, 3, 15], "If": [2, 5, 7, 8, 10, 11, 13, 15, 16, 17, 18, 22], "modif": 2, "order": [2, 7, 9, 15], "consist": [2, 14], "negations_th": 2, "\u0e41\u0e15": [2, 9], "\u0e44\u0e21": [2, 9, 10, 15, 20], "ttc_freq": [2, 11], "\u0e42\u0e14\u0e22\u0e19": 2, "t1": [2, 3], "\u0e27\u0e1a\u0e17": 2, "t10": 2, "\u0e2b\u0e22": 2, "\u0e1a\u0e22": 2, "t3": [2, 3], "get_corpus_db": 2, "url": [2, 9], "get": [2, 10, 14, 17, 18, 20, 22], "catalog": [2, 20], "server": 2, "get_corpus_db_detail": 2, "version": [2, 9, 10, 22, 23], "detail": [2, 9, 20, 22], "about": [2, 9, 15, 19, 22, 23], "inform": [2, 10, 22, 23], "local": [2, 10, 11, 15, 20], "get_corpus_default_db": 2, "default_db": 2, "json": 2, "doesn": [2, 9], "t": [2, 8, 9, 13, 14, 15], "exist": [2, 7, 10, 11, 14, 22], "devic": 2, "edit": [2, 7], "can": [2, 5, 7, 8, 10, 11, 15, 16, 19, 20, 21, 22], "get_corpus_path": 2, "forc": 2, "alreadi": 2, "print": [2, 4, 5, 9, 15], "root": [2, 5, 11, 21], "ha": [2, 9, 15, 21], "been": 2, "yet": [2, 11, 15], "wiki_lm_lstm": 2, "32": [2, 22], "thwiki_lm": 2, "pth": 2, "dl": 2, "05gb": 2, "00": [2, 15], "25": [2, 14, 15], "41": 2, "5mb": 2, "": [2, 7, 9, 10, 13, 14, 15, 16, 20], "thwiki_model_lstm": 2, "avail": [2, 6, 9, 10, 16, 20], "seen": 2, "io": [2, 18], "db": 2, "found": [2, 7, 15], "succesfulli": 2, "otherwis": [2, 9, 10, 15, 16, 17], "26": 2, "114k": 2, "434k": 2, "690kb": 2, "save": [2, 20], "home": [2, 22], "e": [2, 8, 9, 10, 15], "g": [2, 8, 10], "user": [2, 10, 15, 20], "bact": 2, "filenotfounderror": 2, "errno": [2, 22], "No": [2, 5, 9, 13, 21], "directori": [2, 11, 22], "usr": [2, 11], "lib": [2, 11], "python3": [2, 11], "dist": [2, 11], "packag": [2, 11, 21, 22], "provinc": [2, 9], "thailand": [2, 6, 9, 12, 13, 15, 16], "\u0e01\u0e23\u0e30\u0e1a": [2, 7], "\u0e01\u0e23": [2, 8, 9, 20], "\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23": [2, 8], "\u0e01\u0e32\u0e0d\u0e08\u0e19\u0e1a": 2, "\u0e1a\u0e25\u0e23\u0e32\u0e0a\u0e18\u0e32\u0e19": 2, "thailand_provinces_th": 2, "param": [2, 9, 10, 11, 12, 13, 14, 16], "name_th": 2, "\u0e19\u0e19\u0e17\u0e1a": 2, "abbr_th": 2, "\u0e19\u0e1a": [2, 8, 9], "name_en": 2, "nonthaburi": 2, "abbr_en": 2, "nbi": 2, "thai_stopword": [2, 8], "stopword": [2, 15], "\u0e21": [2, 4, 7, 8, 9, 10, 15, 20], "\u0e44\u0e07": 2, "\u0e02\u0e13\u0e30": 2, "\u0e01\u0e32\u0e23": [2, 9, 10, 15, 17, 20], "\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23\u0e2b\u0e19": 2, "stopwords_th": 2, "thesi": [2, 6], "\u0e40\u0e1e": [2, 9], "\u0e0d\u0e28": 2, "\u0e25": [2, 6, 9, 10, 17], "\u0e15\u0e23\u0e30\u0e01": 2, "also": [2, 8, 10, 13, 14, 22], "\u0e01\u0e32\u0e23\u0e40\u0e25": 2, "\u0e2d\u0e01\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e2a\u0e33\u0e04": 2, "\u0e0d\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2a\u0e23": 2, "\u0e1b\u0e04\u0e27\u0e32\u0e21\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e42\u0e14\u0e22\u0e43\u0e0a": 2, "\u0e41\u0e1a\u0e1a\u0e08\u0e33\u0e25\u0e2d\u0e07\u0e41\u0e1a\u0e1a\u0e25\u0e33\u0e14": 2, "\u0e1a\u0e0a": 2, "\u0e21\u0e2b\u0e32\u0e27": 2, "\u0e17\u0e22\u0e32\u0e25": 2, "\u0e22\u0e18\u0e23\u0e23\u0e21\u0e28\u0e32\u0e2a\u0e15\u0e23": 2, "2551": 2, "thai_word": [2, 10], "\u0e01\u0e15": 2, "\u0e01\u0e32": [2, 10, 14, 15, 17, 20], "\u0e01\u0e14\u0e14": 2, "\u0e1e": [2, 6, 8, 9, 10, 13, 15, 17, 20], "\u0e29": [2, 8], "\u0e29\u0e20": 2, "words_th": [2, 10], "languag": [2, 4, 5, 6, 9, 10, 12, 13, 14, 15, 16, 18, 21, 23], "thai_syl": 2, "syllabl": [2, 4, 5, 10, 15, 20, 22], "\u0e01\u0e23\u0e2d\u0e1a": [2, 4], "\u0e01": [2, 6, 7, 8, 9, 10, 13, 15, 20, 21], "\u0e51": [2, 15], "\u0e42\u0e21\u0e1a": 2, "\u0e42\u0e21\u0e19": 2, "\u0e42\u0e21": 2, "\u0e32": [2, 8, 9, 13, 14, 15, 17, 20], "syllables_th": 2, "kucut": 2, "thai_neg": 2, "negat": [2, 9], "thai_family_nam": 2, "famili": 2, "family_names_th": 2, "thai_female_nam": 2, "femal": 2, "person_names_female_th": 2, "thai_male_nam": 2, "male": 2, "person_names_male_th": 2, "an": [2, 7, 8, 10, 14, 15, 21, 23], "open": [2, 10, 15], "multilingu": 2, "knowledg": [2, 10], "graph": [2, 10], "commonsens": 2, "conceptnet5": 2, "wiki": [2, 15], "api": 2, "edg": 2, "public": [2, 17, 18, 23], "semant": 2, "network": [2, 10], "design": 2, "help": [2, 15, 20], "understand": [2, 21], "mean": [2, 8, 14, 15, 17, 22], "peopl": 2, "For": [2, 8, 9, 10, 15, 21, 22, 23], "term": [2, 17, 21], "common": [2, 9, 10, 15, 23], "sens": [2, 21], "which": [2, 7, 10, 15], "artifici": [2, 12], "intelig": 2, "concepnet": 2, "natur": [2, 18, 21], "intellig": [2, 12], "With": [2, 17, 21, 22], "illustr": 2, "show": [2, 9, 14], "relationship": 2, "repres": [2, 15, 17], "between": [2, 4, 6, 9, 10, 17], "node": [2, 15, 22], "abbrevi": [2, 9, 15], "english": [2, 6, 12, 13, 14, 15], "ja": 2, "japan": [2, 9], "given": [2, 6, 7, 8, 9, 11, 15, 17], "accord": [2, 4, 6, 7, 15], "hello": 2, "id": 2, "r": [2, 8, 10, 15], "isa": 2, "c": [2, 10, 15, 16, 22], "greet": 2, "dataset": [2, 10, 11, 16, 20, 23], "d": [2, 15], "4": [2, 3, 4, 5, 6, 9, 12, 13, 14, 15, 17, 23], "end": [2, 9, 10, 15, 21], "label": [2, 9, 17, 20], "licens": [2, 10, 18], "rel": [2, 9, 15], "activ": [2, 9], "omc": 2, "vote": 2, "contributor": 2, "bmsacr": 2, "test": [2, 12, 14, 20], "start": [2, 15, 18], "surfacetext": 2, "kind": [2, 10, 23], "weight": [2, 14], "4641016151377544": 2, "\u0e2a\u0e27": 2, "\u0e2a\u0e14": 2, "relatedto": 2, "n": [2, 3, 8, 13, 15, 16], "prosper": 2, "wiktionari": 2, "sa": [2, 15], "process": [2, 10, 14, 15, 18, 21, 22], "wikiparsec": 2, "resourc": 2, "sense_label": 2, "word_freq": 2, "frequenc": [2, 7, 8, 9, 15], "nation": [2, 3, 7, 9], "tnc_freq": 2, "credit": [2, 10], "korakot": [2, 10, 18], "chaovavanich": [2, 10, 18], "bit": [2, 22], "ly": 2, "3wskzsf": 2, "unigram_word_freq": 2, "defaultdict": 2, "unigram": [2, 3, 8], "bigram_word_freq": 2, "bigram": [2, 3, 8], "trigram_word_freq": 2, "trigram": [2, 3], "textbook": [2, 3], "icu": [2, 10, 21, 22], "find_badword": 2, "callabl": [2, 7, 14], "training_data": 2, "iter": [2, 7, 8, 9, 10, 15], "do": [2, 5, 13, 14, 15, 21], "work": [2, 5, 10, 14, 15], "well": [2, 14], "train": [2, 5, 10, 12, 14, 17, 21], "consid": [2, 4, 9], "make": [2, 9, 14, 15, 17, 21], "unwel": 2, "revise_wordset": 2, "orig_word": 2, "revis": [2, 13], "could": [2, 10, 15, 22], "improv": [2, 10], "dictionari": [2, 7, 8, 10, 13, 14, 15], "base": [2, 5, 6, 7, 8, 10, 13, 14, 15, 16], "orign_word": 2, "remain": 2, "ani": [2, 7, 9, 10, 17, 23], "take": [2, 9, 22], "string": [2, 6, 10, 13, 14, 15], "input": [2, 4, 7, 8, 10, 11, 12, 13, 14, 15, 17, 20], "longest": [2, 20], "segment": [2, 10, 16, 21], "base_word": 2, "more_word": 2, "\u0e16\u0e27": 2, "\u0e14\u0e25": [2, 15], "\u0e17\u0e2d\u0e07\u0e2d": 2, "\u0e19\u0e17\u0e23": [2, 6, 9, 15], "\u0e20": [2, 9, 17], "\u0e12\u0e19": 2, "\u0e40\u0e15": [2, 14], "\u0e22\u0e07": [2, 9, 15, 17], "\u0e28": [2, 8, 9, 10, 13, 15, 17], "\u0e02": [2, 9, 10, 15], "\u0e19\u0e18": [2, 6, 15], "\u0e08\u0e33\u0e25\u0e2d\u0e07": 2, "\u0e14\u0e32\u0e27\u0e40\u0e23": 2, "\u0e2d\u0e07": [2, 9, 10, 20], "union": [2, 4, 5, 9, 10, 15, 16], "dict_tri": [2, 10, 15], "trie": [2, 10, 15], "wordlist": 2, "lambda": 2, "revised_word": 2, "revise_newmm_default_wordset": 2, "newmm": [2, 8, 14, 20, 21], "exact": [2, 9], "copi": [2, 10, 13, 23], "nltk": 2, "www": [2, 6, 7, 9, 10, 15, 22, 23], "org": [2, 9, 10, 14, 15, 16, 18, 23], "howto": 2, "synset": 2, "tha": 2, "all": [2, 7, 8, 10, 12, 14, 15, 17, 22, 23], "lemma": 2, "option": [2, 5, 6, 8, 9, 10, 12, 13, 15, 17, 22], "argument": 2, "constrain": [2, 10], "its": [2, 7, 10, 11, 14, 15, 17], "constraint": 2, "noun": [2, 5, 9], "verb": [2, 5, 9], "adject": [2, 9], "satellit": 2, "adverb": [2, 9], "eng": [2, 6], "\u0e17\u0e33\u0e07\u0e32\u0e19": [2, 9], "01": [2, 15], "02": [2, 14, 16], "08": 2, "\u0e1a": [2, 6, 7, 8, 9, 10, 14, 15, 20, 21], "\u0e32\u0e19": [2, 6, 9, 14], "duplex_hous": 2, "dwell": 2, "hous": 2, "03": [2, 15], "14": [2, 9], "07": 2, "when": [2, 8, 17, 21], "specifi": [2, 8, 9, 11, 16, 22], "\u0e41\u0e23\u0e07": [2, 7], "cound": 2, "interpret": 2, "hard": [2, 21], "adj": [2, 9], "accept": 2, "10": [2, 8, 9, 15, 17, 18, 22], "strong": 2, "name_synset": 2, "dog": 2, "chase": 2, "sysset": 2, "difficult": 2, "easi": [2, 8, 21], "requir": [2, 7, 8, 10, 13, 17, 22, 23], "great": 2, "physic": 2, "mental": 2, "effort": [2, 22], "accomplish": 2, "comprehend": 2, "endur": 2, "all_lemma_nam": 2, "tag": [2, 5, 10, 16, 18, 20], "\u0e2d\u0e40\u0e21\u0e23": [2, 17], "\u0e42\u0e01_\u0e40\u0e27\u0e2a\u0e1b": 2, "\u0e0a\u0e0a": 2, "\u0e40\u0e21": [2, 9, 15], "\u0e2d\u0e07\u0e0a": 2, "\u0e40\u0e2d\u0e19\u0e40\u0e19": 2, "\u0e01\u0e32\u0e23\u0e23": 2, "\u0e1a\u0e40\u0e25": 2, "\u0e22\u0e07\u0e1a": 2, "\u0e15\u0e23\u0e1a": 2, "\u0e0d\u0e18\u0e23\u0e23\u0e21": 2, "\u0e1c": [2, 9, 10, 17, 20], "\u0e15\u0e01\u0e41\u0e15": 2, "\u0e07\u0e40\u0e23": 2, "\u0e2d\u0e14": [2, 8], "\u0e27\u0e22\u0e18\u0e07": 2, "\u0e08": [2, 9, 13, 14, 15, 17, 20], "\u0e42\u0e2d\u0e27\u0e32\u0e19\u0e19": 2, "_\u0e40\u0e27\u0e2d\u0e23": 2, "\u0e42\u0e2d": [2, 9, 21], "80508": 2, "\u0e0b": [2, 8, 9, 13, 15], "\u0e07\u0e44\u0e21": 2, "\u0e41\u0e2d\u0e25\u0e01\u0e2d\u0e2e\u0e2d\u0e25": 2, "\u0e07\u0e15\u0e23\u0e07\u0e44\u0e1b\u0e15\u0e23\u0e07\u0e21\u0e32": 2, "\u0e40\u0e2a": [2, 7, 9, 15, 17, 20], "\u0e19\u0e28": 2, "\u0e19\u0e22": [2, 15, 20], "\u0e2a": [2, 7, 8, 9, 10, 15, 20], "\u0e15\u0e23": [2, 15], "\u0e17\u0e32\u0e07\u0e08": 2, "\u0e15\u0e43\u0e08": 2, "5277": 2, "all_synset": 2, "over": 2, "next": [2, 7], "entiti": [2, 9, 10, 16, 22], "physical_ent": 2, "abstract": 2, "06": [2, 15], "abl": 2, "unabl": 2, "iso": [2, 13], "639": 2, "code": [2, 6, 10, 11, 14, 23], "al": [2, 10], "arb": 2, "bul": 2, "cat": [2, 12], "cmn": 2, "dan": 2, "ell": 2, "eu": 2, "fa": 2, "fin": 2, "fra": 2, "glg": 2, "heb": 2, "hrv": 2, "ind": 2, "ita": 2, "jpn": 2, "nld": 2, "nno": 2, "nob": 2, "pol": 2, "por": 2, "qcn": 2, "slv": 2, "spa": 2, "swe": 2, "zsm": 2, "lamma": 2, "\u0e42\u0e1b\u0e23\u0e14": 2, "like": [2, 7, 9, 15, 16, 21, 22], "\u0e1e\u0e23\u0e30\u0e40\u0e08": [2, 8], "god": 2, "godhead": 2, "father": 2, "\u0e27\u0e19": [2, 8, 9, 10, 15], "roll": 2, "18": [2, 15], "17": [2, 15], "curl": 2, "roll_up": 2, "wind": 2, "11": [2, 6, 9, 10, 15], "support": [2, 9, 15, 22], "practic": 2, "exercis": 2, "drill": 2, "lemma_from_kei": 2, "kei": [2, 7, 15], "similar": [2, 7, 8, 14, 15, 17, 21], "need": [2, 10, 22], "suppli": [2, 10], "instead": [2, 14], "path_similar": 2, "synsets1": 2, "synsets2": 2, "two": [2, 4, 8, 9, 10, 15, 17, 21, 22], "shortest": 2, "distanc": [2, 7], "equat": 2, "follow": [2, 9, 10, 15, 18, 21], "_similar": 2, "_path": 2, "_distanc": 2, "calcul": [2, 15], "connect": 2, "through": [2, 11], "hypernym": 2, "hyponym": 2, "taxonomi": 2, "score": [2, 8, 17], "ranag": 2, "ident": 2, "first": [2, 7, 8, 15, 17], "measur": [2, 9], "second": [2, 15, 17], "obj": [2, 5], "3333333333333333": 2, "07142857142857142": 2, "08333333333333333": 2, "lch_similar": 2, "leacock": 2, "chodorow": 2, "lch": 2, "maximum": [2, 7, 8, 10], "depth": 2, "shown": 2, "below": [2, 15], "log": 2, "_depth": 2, "538973871058276": 2, "9985288301111273": 2, "1526795099383855": 2, "wup_similar": 2, "wu": 2, "palmer": 2, "wup": 2, "least": 2, "subsum": 2, "most": [2, 7, 8, 17, 21], "specif": [2, 6, 10, 14, 17, 23], "ancestor": 2, "13333333333333333": 2, "35294117647058826": 2, "morphi": 2, "form": [2, 9, 15, 17], "possibl": [2, 7, 10, 15], "search": [2, 6, 7, 18], "thiev": 2, "thief": 2, "mix": 2, "custom_lemma": 2, "tab_fil": 2, "custom": [2, 7, 10, 15], "tab": 2, "compl": 2, "hss": 2, "ntu": 2, "edu": [2, 22], "sg": 2, "omw": 2, "map": [2, 9, 17], "share": 2, "tnc": [3, 7, 9], "ttc": 3, "oscar": 3, "gen_sent": 3, "start_seq": 3, "prob": [3, 7], "001": 3, "output_str": 3, "begin": [3, 9, 15], "gen": 3, "\u0e41\u0e21\u0e27": [3, 4, 9, 14], "ouput": 3, "\u0e41\u0e21\u0e27\u0e40\u0e27\u0e25\u0e32\u0e19\u0e30\u0e19": 3, "t2": 3, "\u0e41\u0e21\u0e27\u0e44\u0e21": 3, "\u0e44\u0e14": [3, 4, 9, 15], "\u0e1a\u0e40\u0e0a": 3, "\u0e2d\u0e21": 3, "\u0e07\u0e17\u0e33\u0e15": 3, "\u0e27\u0e40\u0e1b": 3, "\u0e19\u0e40\u0e0b": 3, "\u0e1f\u0e40\u0e27\u0e2d\u0e23": 3, "\u0e04": [3, 6, 7, 9, 10, 15, 20], "\u0e41\u0e04\u0e17\u0e23": 3, "\u0e22\u0e32": 3, "\u0e07\u0e25": 3, "\u0e01\u0e41\u0e2a\u0e14\u0e07": 3, "\u0e13\u0e2b\u0e25\u0e27\u0e07": 3, "toolkit": [4, 9, 13], "poetri": 4, "\u0e01\u0e27": [4, 9, 17], "khaveeverifi": 4, "verifi": 4, "check_sara": 4, "check": [4, 7, 15], "vowel": [4, 15], "kv": 4, "\u0e40\u0e2d\u0e2d": [4, 9], "check_marttra": 4, "spell": [4, 10, 13, 15, 18, 22], "section": [4, 13], "\u0e2a\u0e32\u0e27": 4, "\u0e40\u0e01\u0e2d\u0e27": 4, "is_sumpu": 4, "word1": [4, 17], "word2": [4, 17], "rhyme": 4, "boolen": 4, "\u0e2a\u0e23\u0e23": 4, "check_karu_lahu": 4, "check_klon": 4, "k_type": 4, "8": [4, 6, 10, 14, 15, 16], "suitabl": [4, 22], "poem": 4, "principl": 4, "\u0e19\u0e0a": 4, "\u0e2d\u0e2b\u0e21": 4, "\u0e19\u0e0a\u0e2d\u0e1a\u0e01": 4, "\u0e19\u0e44\u0e01": 4, "\u0e41\u0e25": 4, "\u0e27\u0e01": 4, "\u0e07\u0e44\u0e25": 4, "\u0e2b\u0e21\u0e32\u0e0a": 4, "\u0e2d\u0e19": [4, 9, 17], "\u0e32\u0e17\u0e2d\u0e07": 4, "\u0e25\u0e04\u0e04\u0e19\u0e40\u0e01": 4, "\u0e40\u0e2d": [4, 9], "\u0e07\u0e40\u0e2d": 4, "\u0e07\u0e04\u0e30\u0e19\u0e2d\u0e07": 4, "\u0e04\u0e19\u0e08": 4, "\u0e1a\u0e08\u0e2d\u0e07": 4, "\u0e40\u0e02\u0e32\u0e0a": 4, "\u0e2d\u0e07\u0e40\u0e18": 4, "\u0e22\u0e23": 4, "\u0e07\u0e40\u0e2a": 4, "\u0e22\u0e07\u0e2b\u0e21\u0e32": 4, "cant": 4, "paragraph": 4, "\u0e2b\u0e21\u0e32": 4, "\u0e08\u0e2d\u0e07": 4, "\u0e17\u0e2d\u0e07": 4, "check_aek_too": 4, "dead_syllable_as_aek": 4, "tonal": 4, "checker": [4, 7], "dead": [4, 15], "aek": 4, "too": 4, "both": [4, 10, 15, 17, 21], "\u0e01\u0e32\u0e23\u0e40\u0e0a": 4, "\u0e04\u0e04\u0e33\u0e40\u0e2d\u0e01\u0e42\u0e17": 4, "\u0e40\u0e2d\u0e07": 4, "\u0e43\u0e0a": [4, 9, 15], "\u0e40\u0e2b\u0e21": [4, 9, 15], "\u0e2d\u0e19\u0e01": [4, 9], "__dict__": [4, 7], "mappingproxi": [4, 7], "__module__": [4, 7], "core": [4, 14], "attribut": [4, 7, 9, 23], "__weakref__": [4, 7], "__doc__": [4, 7], "__annotations__": [4, 7], "depend": [5, 9, 10, 22], "dependency_pars": [5, 22], "engin": [5, 6, 7, 14, 21, 22], "esupar": [5, 22], "transformers_ud": [5, 22], "parser": 5, "conllu": 5, "tagger": [5, 10, 16], "bert": [5, 8], "roberta": 5, "deberta": 5, "spacy_thai": [5, 22], "univers": [5, 6, 9, 12, 14, 23], "transformersud": 5, "ud_goeswith": 5, "goeswith": 5, "subword": [5, 16, 20, 21], "koichiyasuoka": 5, "spm": [5, 8, 16], "upo": 5, "huggingfac": [5, 12], "v2": [5, 9, 16], "pre": [5, 9, 10, 14, 17, 22], "wikipedia": [5, 13, 15], "char": [5, 11, 15], "ud": [5, 9], "head": 5, "pretrain": [5, 12, 14, 16], "detect": 5, "question": [5, 19], "answer": 5, "deriv": 5, "th_blackboard": 5, "conll": 5, "\u0e1c\u0e21\u0e40\u0e1b": 5, "\u0e19\u0e04\u0e19\u0e14": 5, "\u0e1c\u0e21": [5, 9, 20], "_": [5, 15], "pron": [5, 9], "nsubj": 5, "spaceaft": 5, "\u0e40\u0e1b": [5, 8, 9, 10, 15], "cop": 5, "\u0e04\u0e19": [5, 9, 14, 15], "acl": [5, 10], "ppr": [5, 9], "vsta": [5, 9], "\u0e04\u0e19\u0e14": [5, 15], "ncmn": [5, 9], "udom83": [6, 20], "length": [6, 7, 15], "convert": [6, 13, 15, 17], "phonet": [6, 13, 22], "prefer": 6, "metasound": [6, 20], "prayut_and_somchaip": 6, "algorithm": [6, 7, 8, 9, 10, 15], "propos": 6, "vichit": 6, "lorchirachoonkul": 6, "lk82": [6, 20], "wanne": 6, "udompanich": 6, "combin": [6, 10, 17], "metaphon": 6, "snae": 6, "br\u00fcckner": 6, "cross": [6, 10], "transliter": [6, 15, 18, 22], "retriev": 6, "techniqu": [6, 8, 10, 21], "\u0e23100000": 6, "\u0e231000": 6, "\u0e25100": 6, "\u0e23100": 6, "\u0e01\u0e29": 6, "\u0e23\u0e13\u0e01\u0e32\u0e23": 6, "\u0e1a931900": 6, "\u0e1ae419": 6, "\u0e1a551": 6, "\u0e1b": [6, 7, 9, 13, 14, 15, 17], "\u0e08\u0e08": [6, 15], "\u0e1b775300": 6, "\u0e1b3e54": 6, "\u0e1b223": 6, "vp": [6, 9], "\u0e1a5515": 6, "mactch": 6, "call": [6, 8, 15, 22], "wa": [6, 10, 15], "develop": [6, 10, 15, 22], "\u0e1a55150": 6, "king": [6, 15], "52": 6, "2009": 6, "novel": 6, "match": [6, 9, 10, 15], "ontologi": 6, "analys": 6, "astrologi": 6, "1983": 6, "sound": [6, 15], "alik": 6, "homonym": 6, "approach": [6, 10, 22], "master": 6, "chulalongkorn": 6, "\u0e2b\u0e25": [6, 13], "\u0e2d\u0e08": 6, "\u0e23\u0e30\u0e0a": 6, "\u0e13\u0e2b": 6, "\u0e41\u0e25\u0e30": [6, 9, 10, 15, 20], "\u0e40\u0e08\u0e23": [6, 8], "\u0e0d": [6, 9, 17], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 6, "\u0e1a\u0e04": [6, 13], "\u0e19\u0e04\u0e33\u0e44\u0e17\u0e22\u0e15\u0e32\u0e21\u0e40\u0e2a": 6, "\u0e22\u0e07\u0e2d": 6, "prayut": 6, "suwanvisat": 6, "somchai": 6, "prasitjutrakul": 6, "In": [6, 10, 15, 21], "1998": 6, "cite": [6, 10, 16, 18], "2022": [6, 15], "sep": 6, "cp": 6, "chula": [6, 7], "ac": [6, 7, 9], "spj": 6, "paper": 6, "thaitext": 6, "ncsec98": 6, "clir": 6, "pdf": [6, 10], "closest": 7, "pn": 7, "peter": 7, "norvig": 7, "phunspel": [7, 22], "A": [7, 8, 10, 13, 14, 15, 21, 22], "spyll": 7, "port": 7, "hunspel": 7, "symspellpi": [7, 22], "python": [7, 10, 15, 18, 21, 22], "symspel": 7, "v6": 7, "\u0e19\u0e15\u0e23\u0e1a": 7, "\u0e19\u0e15\u0e23\u0e07": 7, "\u0e04\u0e23": [7, 9], "\u0e07\u0e40\u0e01\u0e15": 7, "\u0e01\u0e23\u0e30\u0e1b": 7, "\u0e01\u0e30\u0e1b": 7, "\u0e40\u0e2b\u0e15\u0e01\u0e32\u0e23\u0e13": 7, "\u0e40\u0e2b\u0e15": [7, 15, 20], "\u0e01\u0e32\u0e23\u0e13": [7, 15], "correct_s": 7, "list_word": 7, "\u0e40\u0e14": [7, 8, 15], "\u0e19\u0e2d\u0e23": 7, "\u0e40\u0e19": [7, 9], "\u0e19\u0e40\u0e17\u0e2d\u0e23": 7, "ar": [7, 8, 9, 10, 13, 14, 15, 17, 22, 23], "incur": 7, "result": [7, 9, 15, 20], "sort": [7, 15], "occurr": 7, "descend": [7, 15], "tltk": [7, 9, 10], "wrapper": [7, 9, 10, 14], "within": [7, 9, 10, 14, 22], "\u0e27\u0e23": 7, "\u0e1b\u0e23": 7, "\u0e1a\u0e23": 7, "\u0e04\u0e25": [7, 9], "spell_sent": 7, "norvigspellcheck": 7, "custom_dict": [7, 10], "min_freq": 7, "min_len": [7, 15], "max_len": 7, "40": [7, 10, 15], "dict_filt": 7, "_is_thai_and_not_num": 7, "initi": [7, 10, 14], "basic": [7, 16], "choos": [7, 8, 9, 10, 15], "give": [7, 15], "candid": 7, "Then": [7, 8, 17], "select": [7, 8, 15], "highest": [7, 8], "just": [7, 15], "without": [7, 9, 10, 13, 15, 23], "case": [7, 14], "assign": [7, 10], "everi": [7, 15], "around": [7, 14], "000": [7, 9], "minimum": [7, 8], "keep": [7, 10, 11], "func": [7, 8, 14], "filter": [7, 8, 10, 14], "non": [7, 15], "itemsview": 7, "current": [7, 10, 22], "instanc": [7, 8, 9, 15], "\u0e2b\u0e27\u0e32\u0e19": 7, "30": [7, 9, 15], "\u0e21\u0e30\u0e19\u0e32\u0e27": 7, "\u0e41\u0e2d\u0e1a": 7, "3223": 7, "dict_item": 7, "known": [7, 21], "thei": [7, 10, 15], "intersect": 7, "\u0e40\u0e1e\u0e22\u0e19": 7, "\u0e40\u0e1e\u0e25": 7, "\u0e40\u0e1e\u0e25\u0e07": 7, "\u0e22\u0e01\u0e44": 7, "\u0e44\u0e1f\u0e25": 7, "0006959172792052158": 7, "\u0e32\u0e23": [7, 15], "9": [7, 8, 9, 14, 15, 16], "482306849763902e": 7, "05": [7, 11, 15], "freq": 7, "\u0e0d\u0e0d\u0e32": [7, 14], "3639": 7, "\u0e0d\u0e0a\u0e32": 7, "whose": 7, "decreas": 7, "method": [7, 13, 14], "exactli": 7, "one": [7, 8, 10, 13, 15, 17, 22], "itself": 7, "look": [7, 13, 22], "expand": 7, "And": 7, "still": 7, "fail": [7, 22], "\u0e0d\u0e2b\u0e32": 7, "\u0e15\u0e23\u0e20\u0e32\u0e1a": 7, "\u0e15\u0e23\u0e20\u0e32\u0e1e": 7, "default_spell_check": 7, "standard": [7, 15], "art": [7, 10], "ling": 7, "2007": 7, "how": [7, 13, 14, 22], "write": [7, 10, 15, 21, 23], "corrector": 7, "under": [8, 10, 22, 23], "hood": 8, "sent_token": [8, 10], "normal": [8, 9, 14, 15], "frequnci": 8, "less": [8, 21], "than": [8, 10], "greater": 8, "out": [8, 10, 14, 15, 17, 21], "final": 8, "pick": [8, 17], "sum": [8, 14], "appear": 8, "summari": 8, "effect": [8, 13], "refer": [8, 10], "mt5": [8, 22], "small": 8, "xl": 8, "xxl": 8, "cpe": 8, "kmutt": 8, "\u0e17\u0e33\u0e40\u0e19": 8, "\u0e22\u0e1a\u0e17": 8, "\u0e32\u0e0a": 8, "\u0e32\u0e07": [8, 9, 20], "\u0e2b\u0e23": [8, 9], "\u0e07\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 8, "\u0e15\u0e22": [8, 15], "\u0e07\u0e2d\u0e22": 8, "\u0e1a\u0e19\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 8, "\u0e40\u0e02\u0e15\u0e1e\u0e23\u0e30\u0e19\u0e04\u0e23": 8, "\u0e21\u0e40\u0e1b": 8, "\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e40\u0e08": 8, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32": 8, "\u0e17\u0e2d\u0e40\u0e23": 8, "\u0e22\u0e30": 8, "\u0e04\u0e0a\u0e40\u0e2a\u0e19": 8, "\u0e15\u0e23\u0e40\u0e08": 8, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32\u0e19\u0e23\u0e32\u0e18": 8, "\u0e1a\u0e14": 8, "\u0e28\u0e23": 8, "\u0e22\u0e13\u0e23\u0e07\u0e04": 8, "\u0e1e\u0e0d\u0e32\u0e40\u0e08": 8, "\u0e19\u0e2a\u0e01": 8, "\u0e25\u0e04\u0e0a\u0e40\u0e2a\u0e19": 8, "\u0e40\u0e0a": [8, 9], "\u0e2d\u0e2a\u0e32\u0e22\u0e21\u0e2d\u0e0d": 8, "\u0e40\u0e08": 8, "\u0e19\u0e1b": [8, 15], "\u0e02\u0e2d\u0e07\u0e40\u0e08": 8, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32\u0e01\u0e25": 8, "\u0e19\u0e43\u0e19\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 8, "\u0e08\u0e1e\u0e23\u0e30\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 8, "\u0e32\u0e40\u0e08": 8, "\u0e32\u0e2d\u0e22": [8, 9], "\u0e2b": [8, 9, 10, 13, 15], "\u0e41\u0e25\u0e30\u0e40\u0e1b": 8, "\u0e19\u0e21\u0e23\u0e14\u0e01\u0e15\u0e01\u0e17\u0e2d\u0e14\u0e21\u0e32\u0e16": 8, "\u0e32\u0e1a\u0e23\u0e21\u0e27\u0e07\u0e28": 8, "\u0e40\u0e18\u0e2d": [8, 9], "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e23\u0e27\u0e23\u0e24\u0e17\u0e18": 8, "\u0e1e\u0e23\u0e30\u0e2d\u0e07\u0e04": 8, "\u0e32\u0e01\u0e24\u0e14\u0e32\u0e20": 8, "\u0e2b\u0e32\u0e23": 8, "\u0e2d\u0e21\u0e32\u0e43\u0e19\u0e23": 8, "\u0e0a\u0e2a\u0e21": 8, "\u0e22\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 8, "\u0e08\u0e1e\u0e23\u0e30\u0e08": 8, "\u0e25\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 8, "\u0e27\u0e42\u0e1b\u0e23\u0e14\u0e40\u0e01\u0e25": 8, "\u0e32\u0e2f": 8, "\u0e43\u0e2b": [8, 9], "\u0e2a\u0e23": [8, 15], "\u0e32\u0e07\u0e15\u0e33\u0e2b\u0e19": 8, "\u0e19\u0e17": [8, 9, 10, 15], "\u0e1b\u0e23\u0e30\u0e17": 8, "\u0e1a\u0e02\u0e2d\u0e07\u0e1e\u0e23\u0e30\u0e40\u0e08": 8, "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e27\u0e23\u0e24\u0e17": 8, "\u0e18": [8, 13, 15], "\u0e41\u0e25\u0e30\u0e40\u0e08": 8, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32": 8, "\u0e2d\u0e21\u0e32\u0e40\u0e23": 8, "\u0e22\u0e01\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e2b\u0e25": 8, "\u0e01\u0e19": [8, 9], "\u0e15\u0e33\u0e2b\u0e19": 8, "\u0e01\u0e40\u0e14": 8, "extra_id_0": 8, "\u0e2f\u0e25\u0e2f": 8, "\u0e07\u0e19": [8, 15, 17], "\u0e2d\u0e22": [8, 9, 14, 15], "\u0e25\u0e1b\u0e27": 8, "\u0e12\u0e19\u0e18\u0e23\u0e23\u0e21": 8, "\u0e16": [8, 9, 15, 21], "\u0e32\u0e1e": 8, "\u0e14\u0e16": 8, "\u0e07\u0e02\u0e19\u0e21\u0e2b\u0e27\u0e32\u0e19\u0e43\u0e19\u0e15\u0e33\u0e19\u0e32\u0e19\u0e17": 8, "\u0e19\u0e43\u0e08\u0e17": 8, "\u0e14\u0e41\u0e25": 8, "\u0e27\u0e25\u0e30\u0e01": 8, "\u0e2d\u0e07\u0e44\u0e21": 8, "\u0e33\u0e41\u0e02": 8, "\u0e07\u0e43\u0e2a": 8, "\u0e41\u0e19": 8, "\u0e46": [8, 15], "\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27": [8, 9], "\u0e32\u0e40\u0e1b": 8, "\u0e19\u0e2d\u0e30\u0e44\u0e23\u0e17": 8, "\u0e19\u0e43\u0e08\u0e2a": 8, "\u0e14\u0e46": 8, "\u0e32\u0e41\u0e02": 8, "\u0e07\u0e43\u0e2a\u0e40\u0e1b": 8, "extract_keyword": 8, "keyphrase_ngram_rang": 8, "max_keyword": 8, "min_df": 8, "stop_word": 8, "relev": 8, "keyphras": 8, "document": [8, 14, 15, 23], "mai": [8, 9, 10, 15, 22, 23], "produc": 8, "complet": 8, "differ": [8, 9, 10, 21], "so": [8, 22], "care": [8, 15], "note": [8, 9, 10, 14, 15, 17, 22], "expens": 8, "repetit": [8, 14], "creat": [8, 9, 10, 11, 15, 21, 22, 23], "highli": 8, "recommend": [8, 22], "unit": [8, 9, 10, 15], "defin": [8, 10], "vari": 8, "w": [8, 10, 20], "tokenizer_engin": 8, "\u0e40\u0e2a\u0e32": 8, "\u0e44\u0e1f\u0e1f": 8, "consecut": 8, "\u0e40\u0e2a\u0e32\u0e44\u0e1f\u0e1f": 8, "stop": 8, "k": 8, "ignor": [8, 15], "\u0e2d\u0e32\u0e2b\u0e32\u0e23": [8, 9], "\u0e2b\u0e21\u0e32\u0e22\u0e16": 8, "\u0e02\u0e2d\u0e07\u0e41\u0e02": 8, "\u0e07\u0e2b\u0e23": 8, "\u0e2d\u0e02\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e27": 8, "\u0e19\u0e2b\u0e23": 8, "\u0e21\u0e40\u0e02": 8, "\u0e32\u0e2a": [8, 15], "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e41\u0e25": 8, "\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b": 8, "\u0e40\u0e01": [8, 9, 10, 15], "\u0e14\u0e1e\u0e25": 8, "\u0e07\u0e07\u0e32\u0e19\u0e41\u0e25\u0e30\u0e04\u0e27\u0e32\u0e21\u0e23": 8, "\u0e2d\u0e19\u0e41\u0e01": 8, "\u0e32\u0e07\u0e01\u0e32\u0e22": 8, "\u0e17\u0e33\u0e43\u0e2b": 8, "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e40\u0e08\u0e23": 8, "\u0e0d\u0e40\u0e15": 8, "\u0e1a\u0e42\u0e15": 8, "\u0e2d\u0e21\u0e41\u0e0b\u0e21\u0e2a": 8, "\u0e27\u0e19\u0e17": 8, "\u0e01\u0e2b\u0e23\u0e2d": 8, "\u0e04\u0e27\u0e1a\u0e04": 8, "\u0e21\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25": 8, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e15": 8, "\u0e32\u0e07\u0e46": [8, 9], "\u0e43\u0e19\u0e23": [8, 15], "\u0e27\u0e22\u0e17\u0e33\u0e43\u0e2b": 8, "\u0e2d\u0e27": [8, 10], "\u0e22\u0e27\u0e30\u0e15": 8, "\u0e17\u0e33\u0e07\u0e32\u0e19\u0e44\u0e14": 8, "\u0e32\u0e07\u0e1b\u0e01\u0e15": 8, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e08\u0e30\u0e15": 8, "\u0e29\u0e41\u0e25\u0e30\u0e44\u0e21": 8, "\u0e14\u0e42\u0e17\u0e29\u0e15": 8, "\u0e2d\u0e23": 8, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07": 8, "\u0e29\u0e41\u0e25\u0e30": 8, "\u0e14\u0e42\u0e17\u0e29": 8, "minim": 8, "re": [8, 15], "implement": [8, 10, 15], "leverag": 8, "embed": [8, 14], "maartengr": 8, "model_nam": [8, 17], "airesearch": [8, 12], "att": [8, 16], "uncas": [8, 16], "return_similar": 8, "kb": 8, "3228477063109462": 8, "31320597838000375": 8, "29115434699705506": 8, "2678430841321016": 8, "24996827960821494": 8, "23876962942443258": 8, "23191285218852364": 8, "22425422716846247": 8, "22162962875299588": 8, "20773497763458507": 8, "emb": [8, 14], "ndarrai": [8, 14, 17], "averag": [8, 9, 14], "last": 8, "hidden": [8, 15], "layer": 8, "mark": [9, 10, 15, 21], "linguist": [9, 17], "annot": 9, "ne": 9, "three": 9, "lst20": 9, "tabl": 9, "\u0e43\u0e2b\u0e21": [9, 14], "\u0e40\u0e28\u0e29": 9, "\u0e21\u0e32\u0e01": [9, 15], "adp": 9, "adposit": 9, "\u0e41\u0e21": [9, 17], "\u0e02\u0e2d\u0e07": [9, 10], "\u0e2a\u0e33\u0e2b\u0e23": 9, "adv": 9, "\u0e40\u0e25": [9, 10], "\u0e40\u0e25\u0e22": 9, "aux": 9, "auxiliari": 9, "\u0e32\u0e22": [9, 15, 17], "cconj": 9, "coordin": 9, "conjunct": 9, "det": 9, "determin": 9, "\u0e2b\u0e25\u0e32\u0e22": 9, "intj": 9, "interject": 9, "\u0e01\u0e33\u0e21": 9, "\u0e1e\u0e27\u0e01": 9, "\u0e2a\u0e19\u0e32\u0e21": 9, "\u0e2c\u0e32": 9, "\u0e0d\u0e0a": 9, "num": 9, "numer": [9, 10, 15], "103": 9, "2004": 9, "\u0e2b\u0e19": [9, 13, 14, 15], "particl": 9, "\u0e21\u0e32": [9, 15], "\u0e40\u0e02": [9, 10], "pronoun": 9, "\u0e27\u0e40\u0e2d\u0e07": 9, "\u0e43\u0e04\u0e23": 9, "propn": 9, "proper": 9, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32": 9, "\u0e41\u0e04\u0e1b": 9, "\u0e15\u0e2d\u0e25\u0e2e": 9, "\u0e42\u0e2d\u0e1e": 9, "\u0e44\u0e21\u0e40\u0e04": 9, "punct": 9, "punctuat": [9, 15], "sconj": 9, "subordin": 9, "\u0e2b\u0e32\u0e01": 9, "\u0e40\u0e1c\u0e0a": 9, "nprp": 9, "\u0e19\u0e42\u0e14\u0e27\u0e2a": 9, "95": [9, 10, 15], "\u0e42\u0e04\u0e42\u0e23\u0e19": 9, "\u0e42\u0e04": 9, "ncnm": 9, "cardin": 9, "\u0e2a\u0e2d\u0e07": [9, 15], "\u0e2a\u0e32\u0e21": 9, "nonm": 9, "ordin": 9, "nlbl": 9, "b": [9, 14, 15], "\u0e2d\u0e32\u0e04\u0e32\u0e23": 9, "nttl": 9, "titl": [9, 10], "\u0e1e\u0e25\u0e40\u0e2d\u0e01": 9, "person": [9, 10], "\u0e13": [9, 10, 12], "pdmn": 9, "demonstr": 9, "pntr": 9, "interrog": 9, "\u0e2d\u0e30\u0e44\u0e23": 9, "\u0e32\u0e07\u0e44\u0e23": 9, "prel": 9, "vact": 9, "\u0e2d\u0e07\u0e40\u0e1e\u0e25\u0e07": 9, "stativ": 9, "\u0e40\u0e2b": [9, 13], "vatt": 9, "\u0e2a\u0e27\u0e22": 9, "xvbm": 9, "\u0e2d\u0e1a": [9, 20], "\u0e01\u0e33\u0e25": 9, "xvam": 9, "after": [9, 10, 14, 15], "xvmm": 9, "\u0e04\u0e27\u0e23": [9, 20], "\u0e40\u0e04\u0e22": 9, "xvbb": 9, "imper": 9, "mood": 9, "\u0e13\u0e32": 9, "\u0e08\u0e07": 9, "\u0e32\u0e21": 9, "xvae": 9, "post": [9, 10, 12, 14], "ddan": 9, "definit": 9, "classifi": 9, "\u0e42\u0e19": 9, "ddac": 9, "allow": [9, 10], "ddbq": 9, "preced": 9, "quantit": 9, "express": [9, 10, 21, 23], "ddaq": 9, "\u0e1e\u0e2d\u0e14": 9, "diac": 9, "indefinit": 9, "\u0e44\u0e2b\u0e19": 9, "dibq": 9, "\u0e1a\u0e32\u0e07": 9, "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13": 9, "diaq": 9, "dcnm": 9, "donm": 9, "\u0e14\u0e17": 9, "\u0e2a\u0e22": 9, "advn": 9, "\u0e33\u0e40\u0e2a\u0e21\u0e2d": 9, "advi": 9, "\u0e27\u0e46": 9, "\u0e40\u0e2a\u0e17\u0e2d\u0e46": 9, "\u0e32\u0e46": 9, "advp": 9, "prefix": [9, 15], "\u0e42\u0e14\u0e22\u0e40\u0e23": 9, "sententi": 9, "\u0e42\u0e14\u0e22\u0e1b\u0e01\u0e15": 9, "\u0e18\u0e23\u0e23\u0e21\u0e14\u0e32": 9, "cnit": 9, "cltv": 9, "collect": [9, 10, 14, 15], "\u0e01\u0e25": 9, "\u0e1d": [9, 17], "\u0e17\u0e32\u0e07": 9, "\u0e41\u0e1a\u0e1a": 9, "cmtr": 9, "\u0e42\u0e25\u0e01\u0e23": 9, "\u0e41\u0e01": 9, "\u0e27\u0e42\u0e21\u0e07": 9, "cfqc": 9, "\u0e40\u0e17": 9, "\u0e22\u0e27": 9, "cvbl": 9, "verbal": 9, "jcrg": 9, "jcmp": 9, "compar": [9, 17], "\u0e32\u0e01": 9, "jsbr": 9, "\u0e2d\u0e07\u0e08\u0e32\u0e01": 9, "rpre": 9, "preposit": 9, "\u0e08\u0e32\u0e01": 9, "\u0e25\u0e30": 9, "\u0e43\u0e15": [9, 17], "fixn": 9, "nomin": 9, "\u0e04\u0e27\u0e32\u0e21": [9, 10], "\u0e2a\u0e19": 9, "\u0e19\u0e2a\u0e19\u0e32\u0e19": 9, "fixv": 9, "adverbi": 9, "eaff": 9, "affirm": 9, "\u0e30": 9, "\u0e19\u0e30": 9, "\u0e40\u0e16\u0e2d\u0e30": 9, "eitt": 9, "\u0e40\u0e2b\u0e23\u0e2d": 9, "\u0e44\u0e2b\u0e21": 9, "punc": 9, "thu": 9, "corespond": 9, "aj": 9, "av": 9, "ax": 9, "cl": 9, "fx": 9, "ij": 9, "nn": 9, "nu": 9, "pa": 9, "pr": 9, "pu": 9, "vv": 9, "xx": 9, "insid": 9, "outsid": 9, "beggin": 9, "iob": [9, 16], "format": [9, 10, 15, 16], "chunk": [9, 10], "intermedi": 9, "o": [9, 13], "doe": [9, 10, 11, 14, 15, 21, 22], "belong": 9, "\u0e1a\u0e32\u0e23": 9, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32\u0e40\u0e1b": 9, "\u0e19\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e18": 9, "\u0e1b\u0e14": 9, "would": [9, 10, 21], "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e32\u0e18": 9, "respect": [9, 17], "date": [9, 10, 15], "21": [9, 10, 15], "16": 9, "time": [9, 10, 15, 22], "email": [9, 10], "info": [9, 20], "nrpsc": 9, "\u0e42\u0e25\u0e40\u0e21\u0e15\u0e23": 9, "\u0e01\u0e21": 9, "locat": [9, 10, 11, 15, 22], "\u0e44\u0e17\u0e22": [9, 13, 17], "\u0e1b\u0e23\u0e32\u0e08": 9, "\u0e01\u0e33\u0e41\u0e1e\u0e07\u0e40\u0e1e\u0e0a\u0e23": 9, "organ": [9, 10], "\u0e01\u0e23\u0e21\u0e27": 9, "\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23": 9, "\u0e01\u0e32\u0e23\u0e41\u0e1e\u0e17\u0e22": 9, "\u0e08\u0e23": 9, "\u0e19\u0e32\u0e07\u0e1b\u0e23\u0e30\u0e19\u0e2d\u0e21": 9, "\u0e17\u0e2d\u0e07\u0e08": 9, "phone": [9, 10], "1200": 9, "2670": 9, "8888": 9, "bangkokhealth": 9, "zip": 9, "10400": 9, "11130": 9, "monei": [9, 15], "\u0e32\u0e19\u0e1a\u0e32\u0e17": 9, "\u0e1a\u0e32\u0e17": [9, 10, 15], "law": [9, 10, 23], "\u0e42\u0e23\u0e04\u0e23\u0e30\u0e1a\u0e32\u0e14": 9, "2499": 9, "\u0e10\u0e18\u0e23\u0e23\u0e21\u0e19": 9, "pos_tag": 9, "It": [9, 10, 15, 21, 22], "chang": [9, 10, 15], "academ": 9, "articl": 9, "orchid_ud": 9, "blackboard": [9, 10], "treebank": [9, 10], "blackboard_ud": 9, "universaldepend": 9, "pud": 9, "parallel": 9, "nativ": [9, 15, 21], "\u0e23\u0e2d\u0e14": 9, "\u0e43\u0e19": [9, 15, 20], "\u0e2b\u0e25\u0e1a\u0e20": 9, "\u0e19\u0e32\u0e22\u0e01": [9, 17], "\u0e40\u0e0a\u0e2d\u0e23": 9, "\u0e32\u0e2d": 9, "\u0e08\u0e33\u0e19\u0e27\u0e19": [9, 15], "\u0e02\u0e32": 9, "equal": [9, 13], "pos_tag_s": 9, "\u0e19\u0e01": [9, 14, 17], "tag_provinc": 9, "recogn": 9, "context": [9, 21], "reutrn": 9, "ner": [9, 10, 16], "\u0e2b\u0e19\u0e2d\u0e07\u0e04\u0e32\u0e22": 9, "chunk_pars": 9, "crf": [9, 10], "orchidpp": 9, "pars": [9, 18, 22], "phrase": [9, 10], "structur": 9, "now": [9, 15], "tokens_po": 9, "np": 9, "thainer": [9, 16, 20], "load_engin": 9, "entitii": [9, 16], "associ": [9, 16], "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 9, "\u0e17\u0e17": 9, "\u0e22\u0e44\u0e1e\u0e1a": 9, "\u0e25\u0e22": 9, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a": 9, "\u0e19\u0e32\u0e22": 9, "\u0e27\u0e23\u0e23\u0e13": [9, 20], "\u0e1e\u0e07\u0e29": 9, "\u0e44\u0e1e\u0e1a": 9, "\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 9, "nner": 9, "thai_nner": 9, "nest": 9, "recognit": [9, 16, 22], "named_ent": [9, 10], "\u0e41\u0e21\u0e27\u0e17\u0e33\u0e2d\u0e30\u0e44\u0e23\u0e15\u0e2d\u0e19\u0e2b": 9, "\u0e32\u0e42\u0e21\u0e07\u0e40\u0e0a": 9, "\u0e15\u0e2d\u0e19": 9, "\u0e42\u0e21\u0e07": 9, "span": 9, "entity_typ": 9, "thainametagg": [9, 16], "defualt": 9, "thainer14": 9, "get_ner": [9, 16], "15": [9, 14, 15, 17], "61": 9, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a\u0e40\u0e27\u0e25\u0e32": 9, "49": 9, "To": 9, "exclud": [9, 15], "\u0e23\u0e30\u0e1a\u0e1a": 9, "\u0e40\u0e27\u0e25\u0e32": [9, 15], "\u0e40\u0e02\u0e32\u0e40\u0e23": 9, "\u0e22\u0e19\u0e17": 9, "\u0e22\u0e19\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 9, "l": [9, 15, 16], "\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 9, "account": 9, "virach": 9, "sornlertlamvanich": 9, "naoto": 9, "takahashi": 9, "hitoshi": 9, "isahara": 9, "2000": [9, 10], "build": [9, 22], "Of": [9, 20], "journal": [9, 13], "acoust": 9, "societi": 9, "vol": 9, "20": [9, 12], "pp": [9, 10], "189": 9, "198": 9, "1999": 9, "prachya": 9, "boonkwan": 9, "vorapon": 9, "luantangsrisuk": 9, "sitthaa": 9, "phaholphinyo": 9, "kanyanat": 9, "kriengket": 9, "dhanon": 9, "leenoi": 9, "charun": 9, "phrombut": 9, "monthika": 9, "boriboon": 9, "krit": 9, "kosawat": 9, "thepchai": 9, "supnithi": 9, "2020": [9, 10], "guidelin": 9, "arxiv": [9, 16], "2008": 9, "05055": 9, "multipl": [10, 14, 15, 17], "desir": 10, "clause_token": 10, "claus": 10, "run": 10, "split": 10, "claue": 10, "\u0e19\u0e2d\u0e19": 10, "\u0e2d\u0e16": [10, 15], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21": 10, "keep_whitespac": 10, "among": 10, "newlin": [10, 14, 15], "splite": 10, "ted": 10, "thaisum": 10, "nakhun": 10, "chumpolsathien": 10, "specifiaclli": 10, "regex": 10, "pattern": 10, "sentence_1": 10, "\u0e19\u0e44\u0e1b\u0e1b\u0e23\u0e30\u0e0a": 10, "\u0e21\u0e40\u0e21": 10, "\u0e19\u0e32\u0e04\u0e21": [10, 15], "sentence_2": 10, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e44\u0e14": 10, "\u0e1a\u0e01\u0e32\u0e23\u0e2b\u0e21": 10, "\u0e19\u0e40\u0e27": 10, "\u0e22\u0e19\u0e40\u0e1b": 10, "\u0e19\u0e23\u0e30\u0e22\u0e30": 10, "\u0e41\u0e25\u0e30\u0e44\u0e14": 10, "\u0e1a\u0e21\u0e2d\u0e1a\u0e2b\u0e21\u0e32\u0e22\u0e43\u0e2b": 10, "\u0e1b\u0e23\u0e30\u0e08\u0e33\u0e43\u0e19\u0e23\u0e30\u0e14": 10, "\u0e1a\u0e20": 10, "\u0e20\u0e32\u0e04": 10, "n\u0e41\u0e25\u0e30\u0e44\u0e14": 10, "\u0e41\u0e25\u0e30\u0e40\u0e02\u0e32\u0e44\u0e14": 10, "subword_token": 10, "smaller": 10, "insepar": 10, "contigu": 10, "cluster": 10, "featur": [10, 14], "separ": [10, 20], "further": 10, "\u0e08\u0e30": 10, "\u0e1d\u0e32": 10, "appli": [10, 13, 14, 15], "rule": [10, 13, 14, 15, 21], "smallest": 10, "\u0e02\u0e19\u0e21\u0e0a": 10, "enhanc": 10, "inrut": 10, "et": 10, "2001": 10, "ssg": [10, 22], "theeramunkong": 10, "tcc_p": 10, "sentencepiec": [10, 16], "text_1": 10, "\u0e04\u0e40\u0e23": 10, "\u0e21\u0e41\u0e23\u0e01\u0e02\u0e2d\u0e07": 10, "\u0e23\u0e32\u0e0a\u0e27\u0e07\u0e28": 10, "\u0e2b\u0e21": [10, 15, 20], "text_2": 10, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30\u0e1e": 10, "\u0e12\u0e19\u0e32\u0e01\u0e32\u0e23": 10, "\u0e41\u0e23": 10, "\u0e23\u0e32": [10, 13], "\u0e27\u0e32": 10, "\u0e41\u0e1b": 10, "\u0e41\u0e22": 10, "\u0e12": [10, 17], "\u0e19\u0e32": 10, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30": 10, "\u0e19\u0e32\u0e01\u0e32\u0e23": 10, "\u0e21\u0e41\u0e23\u0e01": 10, "\u0e41\u0e1b\u0e25\u0e01": [10, 15], "\u0e41\u0e22\u0e01": 10, "join_broken_num": 10, "omit": 10, "rejoin": 10, "wrongli": 10, "learn": [10, 13, 14], "intern": [10, 11, 13, 22, 23], "compon": [10, 13, 22], "unicod": [10, 13, 15, 22], "mm": 10, "multi": [10, 21], "cut": 10, "maxim": 10, "boundari": 10, "same": 10, "new": [10, 14, 15, 21, 22], "safe": 10, "mechan": 10, "avoid": 10, "long": [10, 15], "continu": 10, "ambigu": 10, "break": 10, "point": [10, 15], "adapt": 10, "rust": 10, "5x": 10, "faster": 10, "domain": [10, 23], "stack": 10, "sefr": 10, "ensembl": 10, "refin": 10, "colloc": 10, "\u0e42\u0e2d\u0e40\u0e04\u0e1a": [10, 21], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32\u0e23": 10, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e1a": 10, "\u0e32\u0e19\u0e40\u0e01": 10, "\u0e42\u0e2d\u0e40\u0e04": [10, 21], "\u0e20\u0e32\u0e29\u0e32": [10, 21], "\u0e27\u0e23\u0e23\u0e13\u0e01\u0e23\u0e23\u0e21": 10, "\u0e20\u0e32\u0e1e\u0e27\u0e32\u0e14": 10, "\u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e07": 10, "\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07": 10, "join": [10, 11], "broken": 10, "decim": [10, 15], "ip": 10, "address": 10, "\u0e40\u0e07": 10, "\u0e191": 10, "234\u0e1a\u0e32\u0e1719": 10, "32\u0e19": 10, "127": 10, "234": 10, "19": 10, "\u0e19\u0e42\u0e0b": 10, "\u0e2d\u0e32\u0e40\u0e1a\u0e30": 10, "\u0e19\u0e22\u0e32\u0e22\u0e19": 10, "\u0e42\u0e0b": 10, "\u0e2d\u0e32": [10, 15], "\u0e40\u0e1a\u0e30": 10, "custom_dict_japanese_nam": 10, "add": [10, 14, 15, 17], "dict_sourc": [10, 15], "word_detoken": 10, "detoken": 10, "along": 10, "encapsul": 10, "them": [10, 15, 21, 22], "singl": [10, 17], "instanti": 10, "custom_words_list": 10, "\u0e2d\u0e30\u0e40\u0e1f\u0e40\u0e0b": 10, "aphasia": 10, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23\u0e1c": 10, "\u0e14\u0e1b\u0e01\u0e15": 10, "\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e1e": 10, "_token": 10, "\u0e2d\u0e32\u0e01\u0e32\u0e23": 10, "\u0e2d\u0e30": 10, "\u0e40\u0e1f\u0e40\u0e0b": 10, "explicitli": 10, "path_to_custom_dictionari": 10, "custom_dictionari": 10, "txtt": 10, "encod": [10, 14], "utf": 10, "f": [10, 15], "naphasia": 10, "n\u0e1c": 10, "n\u0e1b\u0e01\u0e15": 10, "init": 10, "\u0e1b\u0e01\u0e15": 10, "set_tokenizer_engin": 10, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23": 10, "vocaburai": 10, "main": 10, "set_tokenize_engin": 10, "condit": [10, 23], "random": 10, "field": [10, 15, 21], "accuraci": 10, "87": 10, "state": 10, "zhou": 10, "2016": [10, 18, 23], "aclweb": 10, "anthologi": 10, "c16": 10, "1031": 10, "82": 10, "notebook": [10, 14, 16, 18, 23], "vistec": [10, 12, 16], "ai": [10, 12, 14, 16], "ted_crawl": 10, "due": [10, 15], "unreli": 10, "extract_featur": 10, "window": [10, 17, 22], "max_n_gram": 10, "extract": 10, "slide": 10, "size": [10, 14], "n_gram": 10, "gram": 10, "fed": 10, "origin": [10, 15], "nakhunchumpolsathien": 10, "mastersthesi": 10, "chumpolsathien_2020": 10, "distil": 10, "keyword": 10, "neural": 10, "lingual": 10, "summar": [10, 18, 22], "author": 10, "year": [10, 15], "school": 10, "beij": 10, "institut": [10, 12, 13, 16], "technologi": [10, 12], "copyright": [10, 23], "apach": [10, 18, 23], "except": [10, 23], "complianc": [10, 23], "obtain": [10, 15, 17, 23], "unless": [10, 23], "applic": [10, 23], "agre": [10, 23], "softwar": [10, 18, 23], "distribut": [10, 22, 23], "AS": [10, 23], "basi": [10, 21, 23], "warranti": [10, 23], "OR": [10, 23], "OF": [10, 23], "either": [10, 17, 23], "impli": [10, 23], "govern": [10, 11, 23], "permiss": [10, 22, 23], "limit": [10, 23], "list_to_str": 10, "middle_cut": 10, "thaisentencesegmentor": 10, "split_into_sent": 10, "ismiddlecut": 10, "fast": [10, 14, 22], "reason": 10, "accur": [10, 15, 22], "repositori": 10, "attacuttoken": 10, "sc": 10, "librari": [10, 15, 18, 21, 22], "1d": 10, "convolut": 10, "instal": [10, 17, 18], "tensorflow": 10, "themselv": [10, 15], "facebook": [10, 12], "gist": 10, "latticestr": 10, "in_dict": 10, "mmcut": 10, "default_word_dict_tri": 10, "find_all_seg": 10, "variat": 10, "load_dict": 10, "file_path": 10, "dict_nam": 10, "memori": 10, "throught": 10, "overrid": 10, "uniqu": 10, "_67a47bf9": 10, "safe_mod": 10, "parallel_mod": 10, "bind": 10, "reduc": 10, "chanc": 10, "mani": [10, 15], "multithread": 10, "mode": [10, 22], "patorn": 10, "utenpattanun": 10, "longestmatchtoken": 10, "breakiter": 10, "wannaphong": [10, 13, 18], "phatthiyaphaibun": [10, 18], "taglist": 10, "parm": 10, "ws1000": 10, "handl": 10, "framework": 10, "baselin": 10, "2021": [10, 16], "heurist": [10, 15], "exponenti": 10, "wait": 10, "colab": [10, 16], "research": [10, 12, 16, 21], "googl": [10, 16], "fileid": 10, "1v1z657_5eswpo8rlfvrwa0a5e4vkg7si": 10, "drive": 10, "14ibg": 10, "ngzxj15rkwjnwozlot32fqborbx": 10, "scrollto": 10, "myz7nzar7dmw": 10, "accorind": 10, "purpos": 10, "jakkrit": 10, "techo": 10, "grammar": 10, "wittawat": 10, "jitkrittum": 10, "link": [10, 15], "tcc_po": 10, "automodul": 10, "reli": [10, 15], "1utqgxxmrxor9jp1b1jcq1frbnvorhtbq": 10, "jeeragon": 10, "patiroop": 10, "yuanghirun": 10, "sarayut": 10, "paludkong": 10, "supot": 10, "nitsuwat": 10, "para": 10, "limmaneepraserth": 10, "forward": 10, "backward": 10, "symposium": 10, "commun": 10, "iscit": 10, "37": 10, "concept": 10, "present": 10, "miscellan": 11, "get_full_data_path": 11, "full": [11, 15, 22], "get_pythainlp_data_path": 11, "where": [11, 14, 15, 21, 22], "environ": [11, 22], "variabl": [11, 22], "pythainlp_data_dir": [11, 22], "get_pythainlp_path": 11, "misspel": 11, "ratio": 11, "simul": 11, "some": [11, 20, 22], "mispel": 11, "per": 11, "100": [11, 15], "\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e04\u0e23": 11, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e1e": 11, "\u0e17\u0e18\u0e28": 11, "\u0e01\u0e23\u0e32\u0e0a": 11, "1826": 11, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e01": 11, "1727": 11, "machin": [12, 22], "src_lang": 12, "target_lang": 12, "use_gpu": 12, "target": [12, 15], "gpu": [12, 16], "zh": [12, 13], "chines": [12, 21], "fr": 12, "french": [12, 21], "th2en": 12, "\u0e19\u0e23": 12, "\u0e01\u0e41\u0e21\u0e27": 12, "love": 12, "load_model": 12, "en_th": 12, "download_model_al": 12, "advanc": [12, 22], "enthtransl": 12, "depa": [12, 16], "websit": [12, 18], "releas": [12, 23], "enth": 12, "thentransl": 12, "zh_th": 12, "thzhtranslat": 12, "lalita": [12, 18], "marianmt": 12, "zh_cn": 12, "builder": 12, "lalitadeelert": 12, "mt": 12, "zhth": 12, "web": 12, "aibuildersx": 12, "166736255494822": 12, "thzh": 12, "\u0e1c\u0e21\u0e23": 12, "\u0e01\u0e04": 12, "\u6211\u7231\u4f60": 12, "zhthtranslat": 12, "\u0e13\u0e19\u0e30": 12, "th_fr": 12, "thfrtranslat": 12, "helsinki": 12, "opu": 12, "group": [12, 16], "bleu": 12, "co": 12, "thfr": 12, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a": 12, "du": 12, "syst\u00e8m": 12, "turn": 13, "put": [13, 15], "simpli": [13, 15], "fallback_engin": 13, "render": 13, "latin": 13, "alphabet": [13, 15, 22], "royal": [13, 15], "system": [13, 15, 21, 22], "transcript": [13, 15], "rtg": [13, 15], "offici": 13, "publish": 13, "\u0e16\u0e2d\u0e14\u0e40\u0e2a": 13, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e40\u0e1b": 13, "\u0e19\u0e2d": [13, 15], "\u0e01\u0e29\u0e23\u0e25\u0e30\u0e15": 13, "One": 13, "thai2rom_onnx": 13, "lookup": 13, "more": [13, 15, 22, 23], "issu": [13, 21], "deep": 13, "pytorch": 13, "onnx": 13, "runtim": 13, "v1": [13, 17], "compil": [13, 22], "\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16": [13, 15], "samant": 13, "samat": 13, "\u0e20\u0e32\u0e1e\u0e22\u0e19\u0e15\u0e23": 13, "phapn": 13, "phapphayon": 13, "\u0e2d\u0e1b\u0e1b": 13, "should": [13, 15, 21], "pronounc": 13, "graphem": 13, "phonem": [13, 15], "pyicu": [13, 22], "epitran": 13, "tltk_g2p": 13, "11940": 13, "tltk_ipa": 13, "\u0101m\u0101rt": 13, "h": [13, 15], "sa\u02d0ma\u02d0rot": 13, "a\u02d0": 13, "m": [13, 15, 16], "sa\u02d05": 13, "ma\u02d0t3": 13, "saa4": 13, "maat2": 13, "h\u0101phyntr": 13, "p\u02b0a\u02d0pjanot": 13, "p\u02b0": 13, "j": [13, 15], "pronunci": [13, 15], "w2p": 13, "letter": [13, 21], "\u0e2a\u0e32": 13, "\u0e21\u0e32\u0e14": 13, "\u0e1e\u0e32\u0e1a": 13, "\u0e1e\u0e30": 13, "puan": 13, "show_pronunci": 13, "spooner": 13, "\u0e19\u0e32\u0e23": 13, "\u0e19\u0e23\u0e32": 13, "wunsen": 13, "wunsentransliter": 13, "japanes": [13, 21], "korean": 13, "mandarin": 13, "vietnames": 13, "jp_input": 13, "zh_sandhi": 13, "third": 13, "tone": [13, 15], "sandhi": 13, "jp": 13, "hepburn": 13, "ko": [13, 15], "vi": 13, "script": [13, 15], "hanyu": 13, "pinyin": 13, "diacrit": 13, "macron": 13, "ors61": 13, "\u0e01\u0e40\u0e01\u0e13\u0e11": 13, "\u0e01\u0e32\u0e23\u0e17": 13, "\u0e1a\u0e28": 13, "\u0e1e\u0e17": 13, "\u0e20\u0e32\u0e29\u0e32\u0e0d": 13, "\u0e2a\u0e33\u0e19": 13, "\u0e01\u0e07\u0e32\u0e19\u0e23\u0e32\u0e0a\u0e1a": 13, "\u0e13\u0e11": 13, "\u0e15\u0e22\u0e2a\u0e20\u0e32": 13, "2561": 13, "ri35": 13, "\u0e23\u0e32\u0e0a\u0e1a": 13, "\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19": 13, "2535": 13, "ri49": 13, "\u0e20\u0e32\u0e29\u0e32\u0e08": 13, "2549": 13, "thc43": 13, "\u0e40\u0e01\u0e13\u0e11": 13, "\u0e01\u0e32\u0e23\u0e16": 13, "\u0e32\u0e22\u0e17\u0e2d\u0e14\u0e40\u0e2a": 13, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e08": 13, "\u0e19\u0e41\u0e21\u0e19\u0e14\u0e32\u0e23": 13, "\u0e27\u0e22\u0e2d": 13, "\u0e01\u0e02\u0e23\u0e27": 13, "\u0e04\u0e13\u0e30\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 13, "\u0e19\u0e1b\u0e23\u0e30\u0e27": 13, "\u0e28\u0e32\u0e2a\u0e15\u0e23": 13, "\u0e44\u0e17\u0e22\u0e43\u0e19\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23": 13, "2543": 13, "wt": 13, "ohay\u014d": 13, "\u0e42\u0e2d\u0e2e\u0e32\u0e42\u0e22": 13, "ohay": 13, "\u0e42\u0e2d\u0e30\u0e2e\u0e30\u0e42\u0e22": 13, "annyeonghaseyo": 13, "\u0e19\u0e19\u0e22": 13, "\u0e2d\u0e07\u0e2e\u0e32\u0e40\u0e0b\u0e42\u0e22": 13, "xin": 13, "ch\u00e0o": 13, "\u0e32\u0e27": 13, "ni3": 13, "hao3": 13, "internaiton": 13, "trans_list": 13, "xsampa_list": 13, "nitaya": 13, "kanchanawan": 13, "2006": 13, "global": 13, "fine": 14, "tune": 14, "classif": [14, 15, 21, 22], "thaitoken": 14, "frozen": 14, "fastai": 14, "basetoken": 14, "transform": [14, 15, 16], "static": 14, "dictonari": 14, "meth": 14, "\u0e2d\u0e32\u0e20\u0e23\u0e13": 14, "\u0e19\u0e15\u0e21\u0e22\u0e1b": 14, "\u0e20\u0e32\u0e27\u0e19\u0e32\u0e21\u0e22\u0e1b": 14, "\u0e15\u0e21": 14, "add_special_cas": 14, "tok": 14, "document_vector": 14, "agg": 14, "400": [14, 15], "dimens": [14, 17], "bunch": 14, "learner": 14, "aggreg": [14, 17], "avial": 14, "numpi": [14, 17], "arrai": [14, 17], "document_vectorr": 14, "load_data": 14, "thwiki_lm_data": 14, "pkl": 14, "language_model_learn": 14, "config": [14, 22], "emb_sz": 14, "n_hid": 14, "1550": 14, "n_layer": 14, "pad_token": 14, "qrnn": 14, "tie_weight": 14, "out_bia": 14, "output_p": 14, "hidden_p": 14, "input_p": 14, "embed_p": 14, "weight_p": 14, "trn_arg": 14, "drop_mult": 14, "clip": 14, "12": [14, 15], "alpha": 14, "beta": 14, "awd_lstm": 14, "\u0e19\u0e19": 14, "\u0e19\u0e14": [14, 15], "usag": 14, "jupyt": 14, "fix_html": 14, "anbsp": 14, "amp": 14, "nbsp": 14, "lowercase_al": 14, "lowercas": 14, "don": 14, "usual": 14, "nuanc": 14, "capit": 14, "merge_wgt": 14, "em_sz": 14, "wgt": 14, "itos_pr": 14, "itos_new": 14, "insert": 14, "vocab": 14, "updat": 14, "torch": 14, "merg": 14, "randn": 14, "\u0e1b\u0e25\u0e32": 14, "tensor": 14, "5952": 14, "4453": 14, "0011": 14, "encoder_dp": 14, "decod": 14, "process_thai": 14, "pre_rul": 14, "reorder_vowel": [14, 15], "spec_add_spac": 14, "rm_useless_spac": 14, "rm_useless_newlin": 14, "rm_bracket": 14, "replace_url": 14, "replace_rep_nonum": 14, "tok_func": 14, "bound": 14, "post_rul": 14, "ungroup_emoji": 14, "replace_wrep_post_nonum": 14, "spars": [14, 17], "\u0e32\u0e19\u0e19\u0e19\u0e19\u0e19": 14, "\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19": 14, "xxrep": 14, "xxwrep": 14, "\u0e19\u0e32\u0e19": 14, "modifi": [14, 15], "arug": 14, "replace_rep_aft": 14, "replace_wrep_post": 14, "bracket": 14, "artifact": 14, "bag": 14, "done": 14, "prevent": 14, "\u0e2d\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22": 14, "becom": 14, "retain": 14, "counter": [14, 15], "\u0e01\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32": 14, "\u0e01\u0e32xxrep7": 14, "reptit": 14, "replace_wrep": 14, "front": [14, 15], "\u0e33": [14, 17], "ungroup": 14, "zero": [14, 15, 23], "width": [14, 15], "joiner": [14, 15], "zvj": 14, "emoji": [14, 15], "emojipedia": 14, "zwj": 14, "convers": 15, "arabic_digit_to_thai_digit": 15, "arab": 15, "digit": 15, "\u0e53": 15, "\u0e51\u0e50": 15, "\u0e52": 15, "\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19": 15, "123": 15, "\u0e51\u0e52\u0e53": 15, "\u0e54\u0e50\u0e50": 15, "\u0e52\u0e55": 15, "bahttext": 15, "suffix": 15, "baht": 15, "fix": [15, 22], "place": 15, "fit": 15, "\u0e2a\u0e15\u0e32\u0e07\u0e04": 15, "satang": 15, "microsoft": [15, 22], "excel": 15, "currenc": 15, "amount": 15, "\u0e07\u0e1a\u0e32\u0e17\u0e16": 15, "\u0e1a\u0e40\u0e2d": 15, "\u0e14\u0e1a\u0e32\u0e17\u0e16": 15, "200": 15, "\u0e2a\u0e2d\u0e07\u0e23": 15, "\u0e2d\u0e22\u0e1a\u0e32\u0e17\u0e16": 15, "convert_year": 15, "src": 15, "buddhist": 15, "calendar": 15, "anno": 15, "domini": 15, "rattanakosin": 15, "era": 15, "ah": 15, "hejira": 15, "warn": 15, "properli": 15, "1941": 15, "becaus": [15, 21], "travel": 15, "historian": 15, "collat": 15, "revers": 15, "almost": 15, "symbol": 15, "ascend": 15, "\u0e44\u0e01": 15, "\u0e01\u0e32\u0e25": 15, "digit_to_text": 15, "\u0e54": 15, "display_thai_char": 15, "ch": 15, "underscor": 15, "high": 15, "eas": 15, "readabl": 15, "emoji_to_thai": 15, "delimit": 15, "\u0e08\u0e30\u0e21\u0e32\u0e19": 15, "\u0e07\u0e23\u0e16\u0e40\u0e21\u0e25": 15, "\u0e2d\u0e19\u0e1c\u0e21\u0e01": 15, "\u0e19\u0e30\u0e04\u0e23": 15, "\u0e43\u0e01\u0e25": 15, "\u0e14\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e14": 15, "\u0e21\u0e22": 15, "\u0e07\u0e1f": 15, "\u0e27\u0e02": 15, "\u0e32\u0e27\u0e2d\u0e22\u0e32\u0e01\u0e01": 15, "\u0e19\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e0d": 15, "\u0e2d\u0e18\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 15, "\u0e18\u0e07_\u0e44\u0e17\u0e22": 15, "eng_to_thai": 15, "incorrectli": 15, "u": 15, "qwerti": 15, "keyboard": 15, "layout": 15, "intend": 15, "kedmane": 15, "incorrect": 15, "intention": 15, "\u0e18\u0e19\u0e32\u0e04\u0e32\u0e23\u0e41\u0e2b": 15, "\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 15, "got": 15, "tok8kicsj": 15, "xitgmlwmp": 15, "find_keyword": 15, "word_list": 15, "count": 15, "mininum": 15, "pair": 15, "raw": 15, "\u0e25\u0e32\u0e22\u0e25": 15, "\u0e01\u0e29\u0e13": 15, "\u0e01\u0e29\u0e23": 15, "\u0e01\u0e29\u0e23\u0e41\u0e25\u0e30": 15, "countthai": 15, "ignore_char": 15, "x0b": 15, "x0c0123456789": 15, "proport": 15, "puntuat": 15, "percent": 15, "\u0e44\u0e17\u0e22\u0e40\u0e2d": 15, "\u0e19\u0e41\u0e2d\u0e25\u0e1e": 15, "\u0e07\u0e32\u0e19": [15, 20], "count_thai_char": 15, "conson": 15, "lead_vowel": 15, "follow_vowel": 15, "above_vowel": 15, "below_vowel": 15, "tonemark": 15, "sign": 15, "thai_digit": 15, "non_thai": 15, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22": 15, "is_native_thai": 15, "\u0e04\u0e33\u0e44\u0e17\u0e22\u0e41\u0e17": 15, "simpl": 15, "cannot": 15, "entir": 15, "reliabl": 15, "avocado": 15, "\u0e21\u0e30\u0e21": 15, "\u0e27\u0e07": 15, "\u0e15\u0e30\u0e27": 15, "\u0e22\u0e32\u0e20\u0e23\u0e13": 15, "isthai": 15, "\u0e01\u0e32\u0e25\u0e40\u0e27\u0e25\u0e32": 15, "66": 15, "01234567890": 15, "isthaichar": 15, "characttr": 15, "kai": 15, "\u0e55": 15, "five": 15, "reorder": 15, "dangl": 15, "remove_zw": 15, "remove_dup_spac": 15, "remove_repeat_vowel": 15, "remove_dangl": 15, "those": 15, "unicodedata": 15, "fule": 15, "\u0e40\u0e40\u0e1b\u0e25\u0e01": 15, "sara": 15, "\u0e19\u0e32\u0e19\u0e32\u0e32\u0e32": 15, "\u0e19\u0e32\u0e19\u0e32": 15, "now_reign_year": 15, "reign": 15, "10th": 15, "chakri": 15, "dynasti": 15, "reign_year": 15, "\u0e0a\u0e01\u0e32\u0e25\u0e1b": 15, "\u0e0a\u0e01\u0e32\u0e23\u0e1b": 15, "num_to_thaiword": 15, "integ": 15, "maiyamok": 15, "\u0e01\u0e46\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 15, "\u0e17\u0e33\u0e44\u0e21": 15, "\u0e17\u0e33": [15, 20], "rank": 15, "exclude_stopword": 15, "frequeci": 15, "reign_year_to_ad": 15, "reigh": 15, "7th": 15, "4th": 15, "2019": 15, "rama": 15, "1st": 15, "ix": 15, "1946": 15, "typo": 15, "especi": 15, "visual": [15, 22], "who": 15, "accident": 15, "abov": 15, "AND": 15, "repeat": 15, "sure": 15, "doubl": 15, "ae": 15, "remove_tonemark": 15, "four": 15, "down": [15, 21], "\u0e40\u0e2d\u0e01": 15, "fall": 15, "\u0e42\u0e17": 15, "rise": 15, "\u0e15\u0e27\u0e32": 15, "wrong": 15, "mistak": 15, "approxim": 15, "\u0e2a\u0e2d\u0e07\u0e1e": 15, "\u0e19\u0e2b\u0e19": 15, "\u0e07\u0e23": 15, "\u0e2d\u0e22\u0e2a": 15, "\u0e1a\u0e40\u0e08": 15, "\u0e32\u0e19\u0e2a": 15, "\u0e41\u0e2a\u0e19\u0e41\u0e1b\u0e14\u0e2b\u0e21": 15, "\u0e19\u0e2a\u0e32\u0e21\u0e1e": 15, "\u0e19\u0e2b\u0e01\u0e23": 15, "\u0e07\u0e23\u0e2d\u0e22\u0e2a": 15, "\u0e14\u0e25\u0e32\u0e19\u0e2a": 15, "\u0e19\u0e2b\u0e01\u0e23\u0e2d\u0e22\u0e2a": 15, "visibl": 15, "caus": 15, "unexpect": 15, "view": 15, "robust": 15, "zwsp": 15, "zwjp": 15, "logic": 15, "nikhahit": 15, "aa": 15, "am": 15, "sound_syl": 15, "live": 15, "\u0e40\u0e25\u0e02": 15, "syllable_length": 15, "short": 15, "\u0e04\u0e30": 15, "syllable_open_close_detector": 15, "close": 15, "detector": 15, "text_to_arabic_digit": 15, "\u0e41\u0e1b\u0e14": 15, "text_to_num": 15, "\u0e2d\u0e22\u0e41\u0e1b\u0e14\u0e2a": 15, "\u0e1a\u0e08": 15, "\u0e14\u0e40\u0e01": 15, "\u0e32\u0e2b": 15, "\u0e32\u0e1a\u0e32\u0e17\u0e19": 15, "\u0e2d\u0e08\u0e33\u0e19\u0e27\u0e19\u0e17": 15, "980": 15, "\u0e1a\u0e25": 15, "\u0e32\u0e19\u0e2a\u0e2d\u0e07\u0e2b\u0e21": 15, "\u0e07\u0e1e": 15, "\u0e19\u0e41\u0e1b\u0e14\u0e23": 15, "\u0e1a\u0e40\u0e01": 15, "\u0e32\u0e1a\u0e32\u0e17": 15, "10021889": 15, "text_to_thai_digit": 15, "\u0e50": 15, "\u0e58": 15, "\u0e59": 15, "thai_strftim": 15, "dt_obj": 15, "datetim": 15, "fmt": 15, "y": 15, "thaidigit": 15, "direct": 15, "datatim": 15, "strrftime": 15, "weekdai": 15, "\u0e1e\u0e24": 15, "\u0e19\u0e08": 15, "\u0e07\u0e04\u0e32\u0e23": 15, "\u0e19\u0e40\u0e2a\u0e32\u0e23": 15, "\u0e19\u0e2d\u0e32\u0e17": 15, "month": 15, "\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21": 15, "\u0e21\u0e20\u0e32\u0e1e": 15, "\u0e1e\u0e24\u0e28\u0e08": 15, "\u0e01\u0e32\u0e22\u0e19": 15, "\u0e19\u0e27\u0e32\u0e04\u0e21": 15, "centuri": 15, "56": 15, "2556": 15, "2410": 15, "represent": [15, 17], "2519": 15, "2562": 15, "27": [15, 16, 18], "2555": 15, "pass": 15, "strftime": 15, "BE": 15, "543": 15, "certainli": 15, "dai": 15, "meant": 15, "interrim": 15, "solut": 15, "sinc": 15, "th_th": 15, "setlocal": 15, "lc_time": 15, "try": [15, 22], "platform": 15, "independ": 15, "extent": 15, "extens": 15, "posix": 15, "bsd": 15, "gnu": 15, "libc": 15, "strptime": 15, "behavior": 15, "cplusplu": 15, "ctime": 15, "metacpan": 15, "pod": 15, "linux": 15, "die": 15, "net": 15, "man": 15, "openbsd": 15, "freebsd": 15, "unix": 15, "page": [15, 18], "maco": 15, "appl": 15, "archiv": 15, "conceptu": 15, "manpages_iphoneo": 15, "man3": 15, "php": 15, "secur": 15, "manual": 15, "javascript": 15, "samsonj": 15, "quick": [15, 21], "instantiatetd": 15, "datetime_obj": 15, "hour": 15, "minut": 15, "59": 15, "microsecond": 15, "09": 15, "\u0e19\u0e32\u0e22\u0e19": 15, "pad": 15, "62": [15, 22], "_d": 15, "0d": 15, "\u0e19\u0e32\u0e2c": 15, "\u0e19\u0e32\u0e17": 15, "\u0e55\u0e59": 15, "thai_strptim": 15, "add_year": 15, "tzinfo": 15, "backport": 15, "zoneinfo": 15, "asia": 15, "bangkok": 15, "isanno": 15, "31": 15, "2566": 15, "2023": [15, 23], "23": [15, 16], "2565": 15, "thai_to_eng": 15, "bank": 15, "\u0e1f": [15, 20], "\u0e1f\u0e23\u0e2a\u0e1f": 15, "thai_word_tone_detector": 15, "thai_digit_to_arabic_digit": 15, "thaiword_to_d": 15, "\u0e1e\u0e23": [15, 17], "tomorrow": 15, "thaiword_to_num": 15, "actual": 15, "correspond": 15, "\u0e2a\u0e2d\u0e07\u0e25": 15, "\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e41\u0e2a\u0e19\u0e2b\u0e01\u0e23": 15, "\u0e1a\u0e2a\u0e2d\u0e07": 15, "2300612": 15, "thaiword_to_tim": 15, "\u0e32\u0e22\u0e42\u0e21\u0e07\u0e04\u0e23": 15, "13": [15, 22], "time_to_thaiword": 15, "time_data": 15, "24h": 15, "24": 15, "clock": 15, "6h": 15, "m6h": 15, "alwai": 15, "\u0e41\u0e1b\u0e14\u0e19\u0e32\u0e2c": 15, "\u0e01\u0e32\u0e2a": 15, "\u0e14\u0e19\u0e32\u0e17": 15, "\u0e2a\u0e2d\u0e07\u0e42\u0e21\u0e07\u0e40\u0e0a": 15, "\u0e41\u0e1b\u0e14\u0e42\u0e21\u0e07\u0e2a": 15, "\u0e2b\u0e01\u0e42\u0e21\u0e07\u0e04\u0e23": 15, "\u0e1a\u0e2a\u0e2d\u0e07\u0e19\u0e32\u0e2c": 15, "\u0e01\u0e32\u0e2a\u0e32\u0e21\u0e19\u0e32\u0e17": 15, "tone_detector": 15, "words_to_num": 15, "nectec_to_ipa": 15, "nectec": 15, "ipa": [15, 22], "kl": 15, "uua": 15, "pornpimon": 15, "palingoon": 15, "sumonma": 15, "thatphithakkul": 15, "chapter": 15, "handbook": 15, "electron": 15, "ed": 15, "122": 15, "ipa_to_rtg": 15, "kluaj": 15, "kluai": 15, "remove_tone_ipa": 15, "delet": 15, "la\u02d0": 15, "maj": 15, "children": 15, "noth": 15, "finetun": 16, "thai2transform": 16, "speed": 16, "benchmark": [16, 18, 20, 22], "89": 16, "312": 16, "cpu": [16, 22], "64": [16, 22], "65": 16, "namedentityrecognit": 16, "power": 16, "dataset_nam": 16, "grouped_ent": 16, "lowphansirikul": [16, 18], "polpanuma": [16, 18], "jantrakulchai": 16, "nutanong": 16, "210109635": 16, "internet": 16, "jan": 16, "feb": 16, "ab": 16, "2101": 16, "09635": 16, "gensim": 17, "wordvector": 17, "thai2fit_wv": [17, 20], "v0": 17, "ltw2v_v1": 17, "0_15_window": 17, "0_5_window": 17, "load_wordvector": 17, "get_model": 17, "keyedvector": 17, "word2veckeyedvector": 17, "doesnt_match": 17, "mostli": 17, "unrel": 17, "rais": 17, "keyerror": 17, "vocabulari": 17, "strt": 17, "\u0e01\u0e44\u0e17\u0e22": 17, "food": 17, "meal": 17, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e0a": 17, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e17": 17, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e22": 17, "wv": 17, "vehicl": 17, "occup": 17, "\u0e44\u0e0b\u0e19": 17, "\u0e40\u0e19\u0e2d\u0e23": 17, "\u0e1e\u0e19": 17, "\u0e01\u0e07\u0e32\u0e19\u0e40\u0e07": 17, "\u0e19\u0e40\u0e14": 17, "\u0e2b\u0e21\u0e2d": 17, "most_similar_cosmul": 17, "top": 17, "omer": 17, "levi": 17, "yoav": 17, "goldberg": 17, "omerlevy_yoavgoldberg_2014": 17, "directli": [17, 20, 22], "substract": 17, "most_similar": 17, "list_posit": 17, "list_neg": 17, "\u0e25\u0e33\u0e19": 17, "8206598162651062": 17, "\u0e17\u0e30\u0e40\u0e25\u0e2a\u0e32\u0e1a": 17, "775945782661438": 17, "\u0e21\u0e19": 17, "7490593194961548": 17, "\u0e04\u0e25\u0e2d\u0e07": 17, "7471904754638672": 17, "\u0e1b\u0e32\u0e01\u0e41\u0e21": 17, "7354257106781006": 17, "\u0e07\u0e41\u0e21": 17, "7120099067687988": 17, "\u0e17\u0e30\u0e40\u0e25": 17, "7030453681945801": 17, "\u0e21\u0e41\u0e21": 17, "7015200257301331": 17, "\u0e41\u0e2b\u0e25": 17, "6997432112693787": 17, "6960948705673218": 17, "\u0e10\u0e21\u0e19\u0e15\u0e23": 17, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28": 17, "\u0e23\u0e2d\u0e07\u0e19\u0e32\u0e22\u0e01\u0e23": 17, "2730445861816406": 17, "\u0e40\u0e2d\u0e01\u0e2d": 17, "\u0e04\u0e23\u0e23\u0e32\u0e0a\u0e17": 17, "26500266790390015": 17, "\u0e19\u0e32\u0e22\u0e01\u0e23": 17, "2649088203907013": 17, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e08": 17, "\u0e07\u0e2b\u0e27": 17, "25119125843048096": 17, "\u0e32\u0e01\u0e32\u0e23": 17, "2510434687137604": 17, "\u0e40\u0e25\u0e02\u0e32\u0e18": 17, "24824175238609314": 17, "2453523576259613": 17, "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23": 17, "24147476255893707": 17, "\u0e23\u0e2d\u0e07\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19": 17, "24123257398605347": 17, "\u0e2a\u0e21\u0e32\u0e0a": 17, "\u0e2a\u0e20\u0e32": 17, "2405330240726471": 17, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e08": 17, "22022421658039093": 17, "\u0e40\u0e01\u0e32\u0e2b\u0e25": 17, "2196873426437378": 17, "\u0e2a\u0e2b\u0e23": 17, "\u0e10\u0e2d\u0e40\u0e21\u0e23": 17, "21660110354423523": 17, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e0d": 17, "21205860376358032": 17, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 17, "21159221231937408": 17, "20321202278137207": 17, "\u0e07\u0e01\u0e24\u0e29": 17, "19610872864723206": 17, "\u0e2e": 17, "\u0e2d\u0e07\u0e01\u0e07": 17, "1928885132074356": 17, "\u0e1d\u0e23": 17, "\u0e07\u0e40\u0e28\u0e2a": 17, "18383873999118805": 17, "\u0e1e\u0e21": 17, "18369348347187042": 17, "3278159201145172": 17, "3201899230480194": 17, "31755179166793823": 17, "30845439434051514": 17, "306713730096817": 17, "3003999888896942": 17, "2995176911354065": 17, "\u0e04\u0e19\u0e44\u0e17\u0e22": 17, "2885020673274994": 17, "\u0e40\u0e27": 17, "\u0e22\u0e14\u0e19\u0e32\u0e21": 17, "2878379821777344": 17, "\u0e0a\u0e32\u0e27\u0e44\u0e17\u0e22": 17, "28480708599090576": 17, "\u0e40\u0e21\u0e19": 17, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e44\u0e17\u0e22": 17, "computa": 17, "cosin": 17, "consin": 17, "\u0e23\u0e16\u0e44\u0e1f": 17, "\u0e23\u0e16\u0e44\u0e1f\u0e1f": 17, "electr": 17, "43387136": 17, "\u0e2d\u0e14\u0e32\u0e27": 17, "leopard": 17, "04300258": 17, "sentence_vector": 17, "use_mean": 17, "aggregatesd": 17, "calul": 17, "summat": 17, "\u0e27\u0e19\u0e40\u0e2a": 17, "\u0e22\u0e27\u0e40\u0e02": 17, "\u0e14\u0e41\u0e04\u0e27": 17, "\u0e43\u0e19\u0e1b": 17, "735": 17, "meanthod": 17, "00421414": 17, "08881307": 17, "05081136": 17, "05632929": 17, "06607185": 17, "03059357": 17, "113882": 17, "00074836": 17, "05035743": 17, "02914307": 17, "02893357": 17, "11327957": 17, "04562086": 17, "05015393": 17, "11641257": 17, "32304936": 17, "05054322": 17, "03639471": 17, "06531371": 17, "05048079": 17, "05899798": 17, "24338295": 17, "711359": 17, "78861002": 17, "92500597": 17, "42831": 17, "59434797": 17, "01047703": 17, "705004": 17, "40800299": 17, "40506999": 17, "58591403": 17, "63869202": 17, "702155": 17, "62977601": 17, "52269109": 17, "70760502": 17, "50952601": 17, "914392": 17, "70673105": 17, "2014": 17, "regular": 17, "explicit": 17, "faq": 18, "command": [18, 22], "tutori": 18, "augment": [18, 22], "khave": 18, "soundex": [18, 20], "tool": [18, 22], "translat": [18, 21, 22], "ulmfit": [18, 22], "word_vector": 18, "index": 18, "modul": 18, "your": [18, 22], "project": [18, 23], "charin": 18, "arthit": 18, "suriyawongkul": 18, "pattarawat": 18, "chormai": 18, "jun": 18, "zenodo": 18, "doi": 18, "5281": 18, "3519354": 18, "maintain": 18, "team": 18, "frequent": 19, "ask": 19, "pythainlp": [19, 20, 21, 22, 23], "thainlp": [20, 22], "nw": 20, "attacut": [20, 22], "\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e08": 20, "\u0e32\u0e07\u0e41\u0e25\u0e30\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 20, "\u0e2a\u0e20\u0e32\u0e1e": 20, "\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 20, "\u0e20\u0e32": 20, "\u0e07\u0e32": 20, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19\u0e01\u0e30\u0e14": 20, "\u0e19\u0e40\u0e1f": 20, "\u0e2d\u0e07\u0e17": 20, "\u0e07\u0e2b\u0e21": 20, "\u0e19\u0e43\u0e19\u0e04\u0e33": 20, "\u0e19\u0e21": 20, "\u0e40\u0e04\u0e2d\u0e23": 20, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19": 20, "\u0e01\u0e30": 20, "\u0e04\u0e33": 20, "\u0e1c\u0e25": 20, "\u0e2d\u0e1e": 20, "\u0e01\u0e40\u0e09": 20, "\u0e2b\u0e25\u0e32\u0e22\u0e1b": 20, "\u0e32\u0e19\u0e21\u0e32": 20, "\u0e0a\u0e32\u0e27\u0e0a": 20, "\u0e21\u0e0a\u0e19\u0e42\u0e04\u0e01\u0e22\u0e32\u0e27\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e19\u0e44\u0e14": 20, "\u0e1e\u0e32\u0e01": 20, "\u0e32\u0e22\u0e2d\u0e2d\u0e01": 20, "\u0e32\u0e07\u0e01": 20, "\u0e22\u0e0a": 20, "\u0e1a\u0e32\u0e07\u0e04\u0e19\u0e16": 20, "\u0e01\u0e08\u0e33\u0e04": 20, "\u0e01\u0e43\u0e19\u0e02": 20, "\u0e01\u0e1b": 20, "\u0e32\u0e2b\u0e23": 20, "\u0e2d\u0e41\u0e21": 20, "\u0e01\u0e23\u0e30\u0e17": 20, "\u0e0d\u0e2b\u0e32\u0e22": 20, "tagg": 20, "\u0e40\u0e1c": 20, "\u0e27330000": 20, "\u0e274000": 20, "manag": 20, "rm": 20, "user1": 20, "crfcut": 20, "g2p": 20, "36": 20, "wisesight": 20, "1000": 20, "deepcut": 20, "against": 20, "993": 20, "total": 20, "char_level": 20, "tp": 20, "17654": 20, "0000": 20, "fn": 20, "1153": 20, "tn": 20, "50755": 20, "fp": 20, "1478": 20, "9227": 20, "9387": 20, "word_level": 20, "total_words_in_sampl": 20, "19132": 20, "total_words_in_ref_sampl": 20, "18807": 20, "correctly_tokenised_word": 20, "15637": 20, "8173": 20, "8314": 20, "\u0e40\u0e23\u0e32\u0e23": 21, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e16": 21, "\u0e20\u0e32\u0e29\u0e32\u0e16": 21, "\u0e40\u0e04": 21, "histor": 21, "face": 21, "lot": 21, "challeng": 21, "arguabl": 21, "biggest": 21, "problem": [21, 22], "lack": 21, "eo": 21, "prong": 21, "comma": 21, "period": 21, "habit": 21, "connector": 21, "etc": [21, 22], "often": 21, "even": 21, "decid": 21, "boil": 21, "asian": 21, "degre": 21, "extrem": 21, "potato": 21, "pomm": 21, "de": 21, "terr": 21, "best": 21, "\u0e15\u0e32": 21, "\u0e01\u0e25\u0e21": 21, "\u0e15\u0e32\u0e01": 21, "\u0e25\u0e21": 21, "As": 21, "recent": 21, "captur": 21, "seem": 21, "pois": 21, "overcom": 21, "stabl": 22, "pip": 22, "upgrad": 22, "extra": 22, "extra1": 22, "extra2": 22, "ml": 22, "thai2rom": 22, "learnt": 22, "roman": 22, "umlfit": 22, "oskut": 22, "nlpo3": 22, "everyth": 22, "setup": 22, "py": 22, "built": 22, "wheel": 22, "lfd": 22, "uci": 22, "gohlk": 22, "pythonlib": 22, "architectur": 22, "win32": 22, "amd64": 22, "xxx": 22, "cp36": 22, "cp36m": 22, "whl": 22, "technic": 22, "skill": 22, "thing": 22, "accommod": 22, "icu_vers": 22, "obvious": 22, "good": 22, "side": 22, "optim": 22, "better": 22, "databas": 22, "store": 22, "automat": 22, "pythainlp_read_mod": 22, "q": 22, "crfsuit": 22, "executor": 22, "permissionerror": 22, "deni": 22, "corpora": 23, "creativ": 23, "dedic": 23, "cc0": 23, "advis": 23}, "objects": {"pythainlp.augment": [[0, 0, 1, "", "WordNetAug"]], "pythainlp.augment.WordNetAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "find_synonyms"]], "pythainlp.augment.lm": [[0, 0, 1, "", "FastTextAug"], [0, 0, 1, "", "Thai2transformersAug"]], "pythainlp.augment.lm.FastTextAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"], [0, 1, 1, "", "tokenize"]], "pythainlp.augment.lm.Thai2transformersAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "generate"]], "pythainlp.augment.word2vec": [[0, 0, 1, "", "LTW2VAug"], [0, 0, 1, "", "Thai2fitAug"], [0, 0, 1, "", "Word2VecAug"]], "pythainlp.augment.word2vec.LTW2VAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Thai2fitAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Word2VecAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"]], "pythainlp.augment.word2vec.bpemb_wv": [[0, 0, 1, "", "BPEmbAug"]], "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.benchmarks.word_tokenization": [[1, 2, 1, "", "benchmark"], [1, 2, 1, "", "compute_stats"], [1, 2, 1, "", "preprocessing"]], "pythainlp.corpus.conceptnet": [[2, 2, 1, "", "edges"]], "pythainlp.corpus": [[2, 2, 1, "", "countries"], [2, 2, 1, "", "download"], [2, 2, 1, "", "get_corpus"], [2, 2, 1, "", "get_corpus_db"], [2, 2, 1, "", "get_corpus_db_detail"], [2, 2, 1, "", "get_corpus_default_db"], [2, 2, 1, "", "get_corpus_path"], [2, 2, 1, "", "provinces"], [2, 2, 1, "", "remove"], [2, 2, 1, "", "thai_family_names"], [2, 2, 1, "", "thai_female_names"], [2, 2, 1, "", "thai_male_names"], [2, 2, 1, "", "thai_negations"], [2, 2, 1, "", "thai_stopwords"], [2, 2, 1, "", "thai_syllables"], [2, 2, 1, "", "thai_words"]], "pythainlp.corpus.oscar": [[2, 2, 1, "", "unigram_word_freqs"], [2, 2, 1, "", "word_freqs"]], "pythainlp.corpus.tnc": [[2, 2, 1, "", "bigram_word_freqs"], [2, 2, 1, "", "trigram_word_freqs"], [2, 2, 1, "", "unigram_word_freqs"], [2, 2, 1, "", "word_freqs"]], "pythainlp.corpus.ttc": [[2, 2, 1, "", "unigram_word_freqs"], [2, 2, 1, "", "word_freqs"]], "pythainlp.corpus.util": [[2, 2, 1, "", "find_badwords"], [2, 2, 1, "", "revise_newmm_default_wordset"], [2, 2, 1, "", "revise_wordset"]], "pythainlp.corpus.wordnet": [[2, 2, 1, "", "all_lemma_names"], [2, 2, 1, "", "all_synsets"], [2, 2, 1, "", "custom_lemmas"], [2, 2, 1, "", "langs"], [2, 2, 1, "", "lch_similarity"], [2, 2, 1, "", "lemma"], [2, 2, 1, "", "lemma_from_key"], [2, 2, 1, "", "lemmas"], [2, 2, 1, "", "morphy"], [2, 2, 1, "", "path_similarity"], [2, 2, 1, "", "synset"], [2, 2, 1, "", "synsets"], [2, 2, 1, "", "wup_similarity"]], "pythainlp.generate": [[3, 0, 1, "", "Bigram"], [3, 0, 1, "", "Trigram"], [3, 0, 1, "", "Unigram"]], "pythainlp.generate.Bigram": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "gen_sentence"], [3, 1, 1, "", "prob"]], "pythainlp.generate.Trigram": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "gen_sentence"], [3, 1, 1, "", "prob"]], "pythainlp.generate.Unigram": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "gen_sentence"]], "pythainlp.generate.thai2fit": [[3, 2, 1, "", "gen_sentence"]], "pythainlp.khavee": [[4, 0, 1, "", "KhaveeVerifier"]], "pythainlp.khavee.KhaveeVerifier": [[4, 3, 1, "", "__dict__"], [4, 1, 1, "", "__init__"], [4, 3, 1, "", "__module__"], [4, 1, 1, "", "check_aek_too"], [4, 1, 1, "", "check_karu_lahu"], [4, 1, 1, "", "check_klon"], [4, 1, 1, "", "check_marttra"], [4, 1, 1, "", "check_sara"], [4, 1, 1, "", "is_sumpus"]], "pythainlp.parse": [[5, 2, 1, "", "dependency_parsing"]], "pythainlp.soundex": [[6, 2, 1, "", "lk82"], [6, 2, 1, "", "metasound"], [6, 2, 1, "", "prayut_and_somchaip"], [6, 2, 1, "", "soundex"], [6, 2, 1, "", "udom83"]], "pythainlp.spell": [[7, 4, 1, "", "DEFAULT_SPELL_CHECKER"], [7, 0, 1, "", "NorvigSpellChecker"], [7, 2, 1, "", "correct"], [7, 2, 1, "", "correct_sent"], [7, 2, 1, "", "spell"], [7, 2, 1, "", "spell_sent"]], "pythainlp.spell.NorvigSpellChecker": [[7, 3, 1, "", "__dict__"], [7, 1, 1, "", "__init__"], [7, 3, 1, "", "__module__"], [7, 1, 1, "", "correct"], [7, 1, 1, "", "dictionary"], [7, 1, 1, "", "freq"], [7, 1, 1, "", "known"], [7, 1, 1, "", "prob"], [7, 1, 1, "", "spell"]], "pythainlp.summarize": [[8, 2, 1, "", "extract_keywords"], [8, 5, 0, "-", "keybert"], [8, 2, 1, "", "summarize"]], "pythainlp.summarize.keybert": [[8, 0, 1, "id0", "KeyBERT"]], "pythainlp.summarize.keybert.KeyBERT": [[8, 1, 1, "id5", "__init__"], [8, 1, 1, "id9", "embed"], [8, 1, 1, "id6", "extract_keywords"]], "pythainlp.tag": [[9, 0, 1, "", "NER"], [9, 0, 1, "", "NNER"], [9, 2, 1, "", "chunk_parse"], [9, 2, 1, "", "pos_tag"], [9, 2, 1, "", "pos_tag_sents"], [9, 2, 1, "", "tag_provinces"]], "pythainlp.tag.NER": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "load_engine"], [9, 1, 1, "", "tag"]], "pythainlp.tag.NNER": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "load_engine"], [9, 1, 1, "", "tag"]], "pythainlp.tag.thainer": [[9, 0, 1, "", "ThaiNameTagger"]], "pythainlp.tag.thainer.ThaiNameTagger": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "get_ner"]], "pythainlp.tag.tltk": [[9, 2, 1, "", "get_ner"]], "pythainlp.tokenize": [[10, 0, 1, "", "Tokenizer"], [10, 5, 0, "-", "attacut"], [10, 2, 1, "", "clause_tokenize"], [10, 5, 0, "-", "crfcut"], [10, 5, 0, "-", "deepcut"], [10, 5, 0, "-", "etcc"], [10, 5, 0, "-", "longest"], [10, 5, 0, "-", "multi_cut"], [10, 5, 0, "-", "nercut"], [10, 5, 0, "-", "newmm"], [10, 5, 0, "-", "nlpo3"], [10, 5, 0, "-", "oskut"], [10, 5, 0, "-", "pyicu"], [10, 5, 0, "-", "sefr_cut"], [10, 2, 1, "", "sent_tokenize"], [10, 2, 1, "", "subword_tokenize"], [10, 5, 0, "-", "tcc"], [10, 5, 0, "-", "thaisumcut"], [10, 2, 1, "", "word_detokenize"], [10, 2, 1, "", "word_tokenize"]], "pythainlp.tokenize.Tokenizer": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "set_tokenize_engine"], [10, 1, 1, "", "word_tokenize"]], "pythainlp.tokenize.attacut": [[10, 0, 1, "id8", "AttacutTokenizer"], [10, 2, 1, "", "segment"]], "pythainlp.tokenize.attacut.AttacutTokenizer": [[10, 1, 1, "id9", "__init__"], [10, 1, 1, "id10", "tokenize"]], "pythainlp.tokenize.crfcut": [[10, 2, 1, "id0", "extract_features"], [10, 2, 1, "id2", "segment"]], "pythainlp.tokenize.deepcut": [[10, 2, 1, "", "segment"]], "pythainlp.tokenize.etcc": [[10, 2, 1, "id31", "segment"]], "pythainlp.tokenize.longest": [[10, 0, 1, "", "LongestMatchTokenizer"], [10, 2, 1, "id19", "segment"]], "pythainlp.tokenize.longest.LongestMatchTokenizer": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "tokenize"]], "pythainlp.tokenize.multi_cut": [[10, 0, 1, "", "LatticeString"], [10, 2, 1, "id14", "find_all_segment"], [10, 2, 1, "", "mmcut"], [10, 2, 1, "id13", "segment"]], "pythainlp.tokenize.multi_cut.LatticeString": [[10, 1, 1, "", "__init__"]], "pythainlp.tokenize.nercut": [[10, 2, 1, "id22", "segment"]], "pythainlp.tokenize.newmm": [[10, 2, 1, "id27", "segment"]], "pythainlp.tokenize.nlpo3": [[10, 2, 1, "id16", "load_dict"], [10, 2, 1, "id17", "segment"]], "pythainlp.tokenize.oskut": [[10, 2, 1, "", "segment"]], "pythainlp.tokenize.pyicu": [[10, 2, 1, "", "segment"]], "pythainlp.tokenize.sefr_cut": [[10, 2, 1, "", "segment"]], "pythainlp.tokenize.tcc": [[10, 2, 1, "id28", "segment"], [10, 2, 1, "id29", "tcc"], [10, 2, 1, "id30", "tcc_pos"]], "pythainlp.tokenize.tcc_p": [[10, 2, 1, "", "segment"], [10, 2, 1, "", "tcc"], [10, 2, 1, "", "tcc_pos"]], "pythainlp.tokenize.thaisumcut": [[10, 0, 1, "id5", "ThaiSentenceSegmentor"], [10, 2, 1, "id3", "list_to_string"], [10, 2, 1, "id4", "middle_cut"]], "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor": [[10, 1, 1, "id6", "split_into_sentences"]], "pythainlp.tools": [[11, 2, 1, "", "get_full_data_path"], [11, 2, 1, "", "get_pythainlp_data_path"], [11, 2, 1, "", "get_pythainlp_path"]], "pythainlp.tools.misspell": [[11, 2, 1, "", "misspell"]], "pythainlp.translate": [[12, 0, 1, "", "Translate"]], "pythainlp.translate.Translate": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "load_model"], [12, 1, 1, "", "translate"]], "pythainlp.translate.en_th": [[12, 0, 1, "", "EnThTranslator"], [12, 0, 1, "", "ThEnTranslator"], [12, 2, 1, "", "download_model_all"]], "pythainlp.translate.en_th.EnThTranslator": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "translate"]], "pythainlp.translate.en_th.ThEnTranslator": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "translate"]], "pythainlp.translate.th_fr": [[12, 0, 1, "", "ThFrTranslator"]], "pythainlp.translate.th_fr.ThFrTranslator": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "translate"]], "pythainlp.translate.zh_th": [[12, 0, 1, "", "ThZhTranslator"], [12, 0, 1, "", "ZhThTranslator"]], "pythainlp.translate.zh_th.ThZhTranslator": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "translate"]], "pythainlp.translate.zh_th.ZhThTranslator": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "translate"]], "pythainlp.transliterate": [[13, 5, 0, "-", "ipa"], [13, 5, 0, "-", "iso_11940"], [13, 2, 1, "", "pronunciate"], [13, 2, 1, "", "puan"], [13, 5, 0, "-", "pyicu"], [13, 2, 1, "", "romanize"], [13, 2, 1, "", "transliterate"]], "pythainlp.transliterate.ipa": [[13, 2, 1, "id5", "trans_list"], [13, 2, 1, "id4", "transliterate"], [13, 2, 1, "id6", "xsampa_list"]], "pythainlp.transliterate.iso_11940": [[13, 2, 1, "", "transliterate"]], "pythainlp.transliterate.pyicu": [[13, 2, 1, "id0", "transliterate"]], "pythainlp.transliterate.royin": [[13, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thai2rom": [[13, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thaig2p": [[13, 2, 1, "", "transliterate"], [13, 5, 0, "-", "transliterate"]], "pythainlp.transliterate.tltk": [[13, 2, 1, "", "romanize"], [13, 2, 1, "", "tltk_g2p"], [13, 2, 1, "", "tltk_ipa"]], "pythainlp.transliterate.wunsen": [[13, 0, 1, "", "WunsenTransliterate"]], "pythainlp.transliterate.wunsen.WunsenTransliterate": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "transliterate"]], "pythainlp.ulmfit": [[14, 0, 1, "", "ThaiTokenizer"], [14, 2, 1, "", "document_vector"], [14, 2, 1, "", "fix_html"], [14, 2, 1, "", "lowercase_all"], [14, 2, 1, "", "merge_wgts"], [14, 2, 1, "", "process_thai"], [14, 2, 1, "", "remove_space"], [14, 2, 1, "", "replace_rep_after"], [14, 2, 1, "", "replace_rep_nonum"], [14, 2, 1, "", "replace_wrep_post"], [14, 2, 1, "", "replace_wrep_post_nonum"], [14, 2, 1, "", "rm_brackets"], [14, 2, 1, "", "rm_useless_newlines"], [14, 2, 1, "", "rm_useless_spaces"], [14, 2, 1, "", "spec_add_spaces"], [14, 2, 1, "", "ungroup_emoji"]], "pythainlp.ulmfit.ThaiTokenizer": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "add_special_cases"], [14, 1, 1, "", "tokenizer"]], "pythainlp.util": [[15, 0, 1, "", "Trie"], [15, 2, 1, "", "arabic_digit_to_thai_digit"], [15, 2, 1, "", "bahttext"], [15, 2, 1, "", "collate"], [15, 2, 1, "", "convert_years"], [15, 2, 1, "", "count_thai_chars"], [15, 2, 1, "", "countthai"], [15, 2, 1, "", "dict_trie"], [15, 2, 1, "", "digit_to_text"], [15, 2, 1, "", "display_thai_char"], [15, 2, 1, "", "emoji_to_thai"], [15, 2, 1, "", "eng_to_thai"], [15, 2, 1, "", "find_keyword"], [15, 2, 1, "", "ipa_to_rtgs"], [15, 2, 1, "", "is_native_thai"], [15, 2, 1, "", "isthai"], [15, 2, 1, "", "isthaichar"], [15, 2, 1, "", "maiyamok"], [15, 2, 1, "", "nectec_to_ipa"], [15, 2, 1, "", "normalize"], [15, 2, 1, "", "now_reign_year"], [15, 2, 1, "", "num_to_thaiword"], [15, 2, 1, "", "rank"], [15, 2, 1, "", "reign_year_to_ad"], [15, 2, 1, "", "remove_dangling"], [15, 2, 1, "", "remove_dup_spaces"], [15, 2, 1, "", "remove_repeat_vowels"], [15, 2, 1, "", "remove_tone_ipa"], [15, 2, 1, "", "remove_tonemark"], [15, 2, 1, "", "remove_zw"], [15, 2, 1, "", "reorder_vowels"], [15, 2, 1, "", "sound_syllable"], [15, 2, 1, "", "syllable_length"], [15, 2, 1, "", "syllable_open_close_detector"], [15, 2, 1, "", "text_to_arabic_digit"], [15, 2, 1, "", "text_to_num"], [15, 2, 1, "", "text_to_thai_digit"], [15, 2, 1, "", "thai_digit_to_arabic_digit"], [15, 2, 1, "", "thai_strftime"], [15, 2, 1, "", "thai_strptime"], [15, 2, 1, "", "thai_to_eng"], [15, 2, 1, "", "thai_word_tone_detector"], [15, 2, 1, "", "thaiword_to_date"], [15, 2, 1, "", "thaiword_to_num"], [15, 2, 1, "", "thaiword_to_time"], [15, 2, 1, "", "time_to_thaiword"], [15, 2, 1, "", "tone_detector"], [15, 2, 1, "", "words_to_num"]], "pythainlp.util.Trie": [[15, 0, 1, "", "Node"], [15, 1, 1, "", "__init__"], [15, 1, 1, "", "add"], [15, 1, 1, "", "prefixes"], [15, 1, 1, "", "remove"]], "pythainlp.util.Trie.Node": [[15, 1, 1, "", "__init__"], [15, 3, 1, "", "children"], [15, 3, 1, "", "end"]], "pythainlp.wangchanberta": [[16, 0, 1, "", "NamedEntityRecognition"], [16, 0, 1, "", "ThaiNameTagger"], [16, 2, 1, "", "segment"]], "pythainlp.wangchanberta.NamedEntityRecognition": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "get_ner"]], "pythainlp.wangchanberta.ThaiNameTagger": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "get_ner"]], "pythainlp.word_vector": [[17, 0, 1, "", "WordVector"]], "pythainlp.word_vector.WordVector": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "doesnt_match"], [17, 1, 1, "", "get_model"], [17, 1, 1, "", "load_wordvector"], [17, 1, 1, "", "most_similar_cosmul"], [17, 1, 1, "", "sentence_vectorizer"], [17, 1, 1, "", "similarity"]], "": [[22, 6, 1, "-", "PYTHAINLP_DATA_DIR"], [22, 6, 1, "-", "PYTHAINLP_READ_MODE"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:data", "5": "py:module", "6": "std:envvar"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "data", "Python data"], "5": ["py", "module", "Python module"], "6": ["std", "envvar", "environment variable"]}, "titleterms": {"pythainlp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "augment": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "benchmark": 1, "token": [1, 10], "qualiti": 1, "corpu": 2, "conceptnet": 2, "tnc": 2, "ttc": 2, "oscar": 2, "util": [2, 15], "wordnet": 2, "definit": 2, "gener": 3, "khave": 4, "pars": 5, "soundex": 6, "refer": [6, 7, 9, 13, 15, 16, 17, 18], "spell": 7, "summar": 8, "keyword": 8, "extract": 8, "engin": [8, 9, 10, 13], "keybert": 8, "tag": 9, "tagger": 9, "perceptron": 9, "unigram": 9, "sentenc": 10, "level": 10, "crfcut": 10, "thaisumcut": 10, "word": 10, "attacut": 10, "deepcut": 10, "multi_cut": 10, "nlpo3": 10, "longest": 10, "pyicu": 10, "nercut": 10, "sefr_cut": 10, "oskut": 10, "newmm": 10, "subword": 10, "tcc": 10, "etcc": 10, "tool": 11, "translat": 12, "transliter": 13, "roman": 13, "thai2rom": 13, "royin": 13, "icu": 13, "ipa": 13, "thaig2p": 13, "tltk": 13, "iso_11940": 13, "ulmfit": 14, "wangchanberta": 16, "word_vector": 17, "depend": 17, "document": 18, "note": 18, "packag": 18, "indic": 18, "tabl": 18, "citat": 18, "faq": [19, 22], "command": 20, "line": 20, "get": 21, "start": 21, "tutori": 21, "notebook": 21, "instal": 22, "runtim": 22, "configur": 22, "licens": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pythainlp.augment": [[0, "pythainlp-augment"]], "Modules": [[0, "modules"], [1, "modules"], [2, "modules"], [3, "modules"], [4, "modules"], [5, "modules"], [6, "modules"], [7, "modules"], [8, "modules"], [9, "modules"], [10, "modules"], [11, "modules"], [12, "modules"], [13, "modules"], [14, "modules"], [15, "modules"], [16, "modules"], [17, "modules"]], "pythainlp.benchmarks": [[1, "pythainlp-benchmarks"]], "Tokenization": [[1, "tokenization"]], "Quality": [[1, "quality"]], "pythainlp.corpus": [[2, "pythainlp-corpus"]], "ConceptNet": [[2, "conceptnet"]], "TNC": [[2, "tnc"]], "TTC": [[2, "ttc"]], "OSCAR": [[2, "oscar"]], "Util": [[2, "util"]], "WordNet": [[2, "wordnet"]], "Definition": [[2, "definition"]], "pythainlp.generate": [[3, "pythainlp-generate"]], "pythainlp.khavee": [[4, "pythainlp-khavee"]], "pythainlp.parse": [[5, "pythainlp-parse"]], "pythainlp.soundex": [[6, "pythainlp-soundex"]], "References": [[6, "references"], [7, "references"], [9, "references"], [13, "references"], [15, "references"], [16, "references"], [17, "references"]], "pythainlp.spell": [[7, "pythainlp-spell"]], "pythainlp.summarize": [[8, "pythainlp-summarize"]], "Keyword Extraction Engines": [[8, "keyword-extraction-engines"]], "KeyBERT": [[8, "module-pythainlp.summarize.keybert"]], "pythainlp.tag": [[9, "pythainlp-tag"]], "Tagger Engines": [[9, "tagger-engines"]], "perceptron": [[9, "perceptron"]], "unigram": [[9, "unigram"]], "pythainlp.tokenize": [[10, "pythainlp-tokenize"]], "Tokenization Engines": [[10, "tokenization-engines"]], "Sentence level": [[10, "sentence-level"]], "crfcut": [[10, "module-pythainlp.tokenize.crfcut"]], "thaisumcut": [[10, "module-pythainlp.tokenize.thaisumcut"]], "Word level": [[10, "word-level"]], "attacut": [[10, "id7"]], "deepcut": [[10, "id11"]], "multi_cut": [[10, "module-pythainlp.tokenize.multi_cut"]], "nlpo3": [[10, "id15"]], "longest": [[10, "module-pythainlp.tokenize.longest"]], "pyicu": [[10, "id20"]], "nercut": [[10, "module-pythainlp.tokenize.nercut"]], "sefr_cut": [[10, "module-pythainlp.tokenize.sefr_cut"]], "oskut": [[10, "id25"]], "newmm": [[10, "newmm"]], "Subword level": [[10, "subword-level"]], "tcc": [[10, "module-pythainlp.tokenize.tcc"]], "etcc": [[10, "module-pythainlp.tokenize.etcc"]], "pythainlp.tools": [[11, "pythainlp-tools"]], "pythainlp.translate": [[12, "pythainlp-translate"]], "pythainlp.transliterate": [[13, "pythainlp-transliterate"]], "Romanize Engines": [[13, "romanize-engines"]], "thai2rom": [[13, "module-pythainlp.transliterate.thai2rom.romanize"]], "royin": [[13, "module-pythainlp.transliterate.royin.romanize"]], "Transliterate Engines": [[13, "transliterate-engines"]], "icu": [[13, "module-pythainlp.transliterate.pyicu"]], "ipa": [[13, "module-pythainlp.transliterate.ipa"]], "thaig2p": [[13, "module-pythainlp.transliterate.thaig2p.transliterate"]], "tltk": [[13, "id7"]], "iso_11940": [[13, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.ulmfit": [[14, "pythainlp-ulmfit"]], "pythainlp.util": [[15, "pythainlp-util"]], "pythainlp.wangchanberta": [[16, "pythainlp-wangchanberta"]], "pythainlp.word_vector": [[17, "pythainlp-word-vector"]], "Dependencies": [[17, "dependencies"]], "PyThaiNLP documentation": [[18, "pythainlp-documentation"]], "Notes": [[18, null]], "Package reference:": [[18, null]], "Indices and tables": [[18, "indices-and-tables"]], "Citations": [[18, "citations"]], "FAQ": [[19, "faq"], [22, "faq"]], "Command Line": [[20, "command-line"]], "Getting Started": [[21, "getting-started"]], "Tutorial Notebooks": [[21, "tutorial-notebooks"]], "Installation": [[22, "installation"]], "Runtime Configurations": [[22, "runtime-configurations"]], "License": [[23, "license"]]}, "indexentries": {"bpembaug (class in pythainlp.augment.word2vec.bpemb_wv)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug"]], "fasttextaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.FastTextAug"]], "ltw2vaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.LTW2VAug"]], "thai2fitaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Thai2fitAug"]], "thai2transformersaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.Thai2transformersAug"]], "word2vecaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Word2VecAug"]], "wordnetaug (class in pythainlp.augment)": [[0, "pythainlp.augment.WordNetAug"]], "__init__() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.__init__"]], "__init__() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.__init__"]], "__init__() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.__init__"]], "__init__() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.__init__"]], "__init__() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.__init__"]], "__init__() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.__init__"]], "__init__() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.__init__"]], "augment() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.augment"]], "augment() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.augment"]], "augment() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.augment"]], "augment() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.augment"]], "augment() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.augment"]], "augment() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.augment"]], "augment() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.augment"]], "find_synonyms() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.find_synonyms"]], "generate() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.generate"]], "load_w2v() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.load_w2v"]], "modify_sent() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.modify_sent"]], "modify_sent() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.modify_sent"]], "tokenize() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.tokenize"]], "tokenizer() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.tokenizer"]], "benchmark() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.benchmark"]], "compute_stats() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.compute_stats"]], "preprocessing() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.preprocessing"]], "all_lemma_names() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.all_lemma_names"]], "all_synsets() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.all_synsets"]], "bigram_word_freqs() (in module pythainlp.corpus.tnc)": [[2, "pythainlp.corpus.tnc.bigram_word_freqs"]], "countries() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.countries"]], "custom_lemmas() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.custom_lemmas"]], "download() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.download"]], "edges() (in module pythainlp.corpus.conceptnet)": [[2, "pythainlp.corpus.conceptnet.edges"]], "find_badwords() (in module pythainlp.corpus.util)": [[2, "pythainlp.corpus.util.find_badwords"]], "get_corpus() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.get_corpus"]], "get_corpus_db() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.get_corpus_db"]], "get_corpus_db_detail() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.get_corpus_db_detail"]], "get_corpus_default_db() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.get_corpus_default_db"]], "get_corpus_path() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.get_corpus_path"]], "langs() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.langs"]], "lch_similarity() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.lch_similarity"]], "lemma() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.lemma"]], "lemma_from_key() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.lemma_from_key"]], "lemmas() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.lemmas"]], "morphy() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.morphy"]], "path_similarity() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.path_similarity"]], "provinces() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.provinces"]], "remove() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.remove"]], "revise_newmm_default_wordset() (in module pythainlp.corpus.util)": [[2, "pythainlp.corpus.util.revise_newmm_default_wordset"]], "revise_wordset() (in module pythainlp.corpus.util)": [[2, "pythainlp.corpus.util.revise_wordset"]], "synset() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.synset"]], "synsets() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.synsets"]], "thai_family_names() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.thai_family_names"]], "thai_female_names() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.thai_female_names"]], "thai_male_names() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.thai_male_names"]], "thai_negations() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.thai_negations"]], "thai_stopwords() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.thai_stopwords"]], "thai_syllables() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.thai_syllables"]], "thai_words() (in module pythainlp.corpus)": [[2, "pythainlp.corpus.thai_words"]], "trigram_word_freqs() (in module pythainlp.corpus.tnc)": [[2, "pythainlp.corpus.tnc.trigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.oscar)": [[2, "pythainlp.corpus.oscar.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.tnc)": [[2, "pythainlp.corpus.tnc.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.ttc)": [[2, "pythainlp.corpus.ttc.unigram_word_freqs"]], "word_freqs() (in module pythainlp.corpus.oscar)": [[2, "pythainlp.corpus.oscar.word_freqs"]], "word_freqs() (in module pythainlp.corpus.tnc)": [[2, "pythainlp.corpus.tnc.word_freqs"]], "word_freqs() (in module pythainlp.corpus.ttc)": [[2, "pythainlp.corpus.ttc.word_freqs"]], "wup_similarity() (in module pythainlp.corpus.wordnet)": [[2, "pythainlp.corpus.wordnet.wup_similarity"]], "bigram (class in pythainlp.generate)": [[3, "pythainlp.generate.Bigram"]], "trigram (class in pythainlp.generate)": [[3, "pythainlp.generate.Trigram"]], "unigram (class in pythainlp.generate)": [[3, "pythainlp.generate.Unigram"]], "__init__() (pythainlp.generate.bigram method)": [[3, "pythainlp.generate.Bigram.__init__"]], "__init__() (pythainlp.generate.trigram method)": [[3, "pythainlp.generate.Trigram.__init__"]], "__init__() (pythainlp.generate.unigram method)": [[3, "pythainlp.generate.Unigram.__init__"]], "gen_sentence() (in module pythainlp.generate.thai2fit)": [[3, "pythainlp.generate.thai2fit.gen_sentence"]], "gen_sentence() (pythainlp.generate.bigram method)": [[3, "pythainlp.generate.Bigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.trigram method)": [[3, "pythainlp.generate.Trigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.unigram method)": [[3, "pythainlp.generate.Unigram.gen_sentence"]], "prob() (pythainlp.generate.bigram method)": [[3, "pythainlp.generate.Bigram.prob"]], "prob() (pythainlp.generate.trigram method)": [[3, "pythainlp.generate.Trigram.prob"]], "khaveeverifier (class in pythainlp.khavee)": [[4, "pythainlp.khavee.KhaveeVerifier"]], "__dict__ (pythainlp.khavee.khaveeverifier attribute)": [[4, "pythainlp.khavee.KhaveeVerifier.__dict__"]], "__init__() (pythainlp.khavee.khaveeverifier method)": [[4, "pythainlp.khavee.KhaveeVerifier.__init__"]], "__module__ (pythainlp.khavee.khaveeverifier attribute)": [[4, "pythainlp.khavee.KhaveeVerifier.__module__"]], "check_aek_too() (pythainlp.khavee.khaveeverifier method)": [[4, "pythainlp.khavee.KhaveeVerifier.check_aek_too"]], "check_karu_lahu() (pythainlp.khavee.khaveeverifier method)": [[4, "pythainlp.khavee.KhaveeVerifier.check_karu_lahu"]], "check_klon() (pythainlp.khavee.khaveeverifier method)": [[4, "pythainlp.khavee.KhaveeVerifier.check_klon"]], "check_marttra() (pythainlp.khavee.khaveeverifier method)": [[4, "pythainlp.khavee.KhaveeVerifier.check_marttra"]], "check_sara() (pythainlp.khavee.khaveeverifier method)": [[4, "pythainlp.khavee.KhaveeVerifier.check_sara"]], "is_sumpus() (pythainlp.khavee.khaveeverifier method)": [[4, "pythainlp.khavee.KhaveeVerifier.is_sumpus"]], "dependency_parsing() (in module pythainlp.parse)": [[5, "pythainlp.parse.dependency_parsing"]], "lk82() (in module pythainlp.soundex)": [[6, "pythainlp.soundex.lk82"]], "metasound() (in module pythainlp.soundex)": [[6, "pythainlp.soundex.metasound"]], "prayut_and_somchaip() (in module pythainlp.soundex)": [[6, "pythainlp.soundex.prayut_and_somchaip"]], "soundex() (in module pythainlp.soundex)": [[6, "pythainlp.soundex.soundex"]], "udom83() (in module pythainlp.soundex)": [[6, "pythainlp.soundex.udom83"]], "default_spell_checker (in module pythainlp.spell)": [[7, "pythainlp.spell.DEFAULT_SPELL_CHECKER"]], "norvigspellchecker (class in pythainlp.spell)": [[7, "pythainlp.spell.NorvigSpellChecker"]], "__dict__ (pythainlp.spell.norvigspellchecker attribute)": [[7, "pythainlp.spell.NorvigSpellChecker.__dict__"]], "__init__() (pythainlp.spell.norvigspellchecker method)": [[7, "pythainlp.spell.NorvigSpellChecker.__init__"]], "__module__ (pythainlp.spell.norvigspellchecker attribute)": [[7, "pythainlp.spell.NorvigSpellChecker.__module__"]], "correct() (in module pythainlp.spell)": [[7, "pythainlp.spell.correct"]], "correct() (pythainlp.spell.norvigspellchecker method)": [[7, "pythainlp.spell.NorvigSpellChecker.correct"]], "correct_sent() (in module pythainlp.spell)": [[7, "pythainlp.spell.correct_sent"]], "dictionary() (pythainlp.spell.norvigspellchecker method)": [[7, "pythainlp.spell.NorvigSpellChecker.dictionary"]], "freq() (pythainlp.spell.norvigspellchecker method)": [[7, "pythainlp.spell.NorvigSpellChecker.freq"]], "known() (pythainlp.spell.norvigspellchecker method)": [[7, "pythainlp.spell.NorvigSpellChecker.known"]], "prob() (pythainlp.spell.norvigspellchecker method)": [[7, "pythainlp.spell.NorvigSpellChecker.prob"]], "spell() (in module pythainlp.spell)": [[7, "pythainlp.spell.spell"]], "spell() (pythainlp.spell.norvigspellchecker method)": [[7, "pythainlp.spell.NorvigSpellChecker.spell"]], "spell_sent() (in module pythainlp.spell)": [[7, "pythainlp.spell.spell_sent"]], "keybert (class in pythainlp.summarize.keybert)": [[8, "id0"], [8, "pythainlp.summarize.keybert.KeyBERT"]], "__init__() (pythainlp.summarize.keybert.keybert method)": [[8, "id5"], [8, "pythainlp.summarize.keybert.KeyBERT.__init__"]], "embed() (pythainlp.summarize.keybert.keybert method)": [[8, "id9"], [8, "pythainlp.summarize.keybert.KeyBERT.embed"]], "extract_keywords() (in module pythainlp.summarize)": [[8, "pythainlp.summarize.extract_keywords"]], "extract_keywords() (pythainlp.summarize.keybert.keybert method)": [[8, "id6"], [8, "pythainlp.summarize.keybert.KeyBERT.extract_keywords"]], "module": [[8, "module-pythainlp.summarize.keybert"], [10, "module-pythainlp.tokenize.attacut"], [10, "module-pythainlp.tokenize.crfcut"], [10, "module-pythainlp.tokenize.deepcut"], [10, "module-pythainlp.tokenize.etcc"], [10, "module-pythainlp.tokenize.longest"], [10, "module-pythainlp.tokenize.multi_cut"], [10, "module-pythainlp.tokenize.nercut"], [10, "module-pythainlp.tokenize.newmm"], [10, "module-pythainlp.tokenize.nlpo3"], [10, "module-pythainlp.tokenize.oskut"], [10, "module-pythainlp.tokenize.pyicu"], [10, "module-pythainlp.tokenize.sefr_cut"], [10, "module-pythainlp.tokenize.tcc"], [10, "module-pythainlp.tokenize.thaisumcut"], [13, "module-pythainlp.transliterate.ipa"], [13, "module-pythainlp.transliterate.iso_11940"], [13, "module-pythainlp.transliterate.pyicu"], [13, "module-pythainlp.transliterate.royin.romanize"], [13, "module-pythainlp.transliterate.thai2rom.romanize"], [13, "module-pythainlp.transliterate.thaig2p.transliterate"]], "pythainlp.summarize.keybert": [[8, "module-pythainlp.summarize.keybert"]], "summarize() (in module pythainlp.summarize)": [[8, "pythainlp.summarize.summarize"]], "ner (class in pythainlp.tag)": [[9, "pythainlp.tag.NER"]], "nner (class in pythainlp.tag)": [[9, "pythainlp.tag.NNER"]], "thainametagger (class in pythainlp.tag.thainer)": [[9, "pythainlp.tag.thainer.ThaiNameTagger"]], "__init__() (pythainlp.tag.ner method)": [[9, "pythainlp.tag.NER.__init__"]], "__init__() (pythainlp.tag.nner method)": [[9, "pythainlp.tag.NNER.__init__"]], "__init__() (pythainlp.tag.thainer.thainametagger method)": [[9, "pythainlp.tag.thainer.ThaiNameTagger.__init__"]], "chunk_parse() (in module pythainlp.tag)": [[9, "pythainlp.tag.chunk_parse"]], "get_ner() (in module pythainlp.tag.tltk)": [[9, "pythainlp.tag.tltk.get_ner"]], "get_ner() (pythainlp.tag.thainer.thainametagger method)": [[9, "pythainlp.tag.thainer.ThaiNameTagger.get_ner"]], "load_engine() (pythainlp.tag.ner method)": [[9, "pythainlp.tag.NER.load_engine"]], "load_engine() (pythainlp.tag.nner method)": [[9, "pythainlp.tag.NNER.load_engine"]], "pos_tag() (in module pythainlp.tag)": [[9, "pythainlp.tag.pos_tag"]], "pos_tag_sents() (in module pythainlp.tag)": [[9, "pythainlp.tag.pos_tag_sents"]], "tag() (pythainlp.tag.ner method)": [[9, "pythainlp.tag.NER.tag"]], "tag() (pythainlp.tag.nner method)": [[9, "pythainlp.tag.NNER.tag"]], "tag_provinces() (in module pythainlp.tag)": [[9, "pythainlp.tag.tag_provinces"]], "attacuttokenizer (class in pythainlp.tokenize.attacut)": [[10, "id8"], [10, "pythainlp.tokenize.attacut.AttacutTokenizer"]], "latticestring (class in pythainlp.tokenize.multi_cut)": [[10, "pythainlp.tokenize.multi_cut.LatticeString"]], "longestmatchtokenizer (class in pythainlp.tokenize.longest)": [[10, "pythainlp.tokenize.longest.LongestMatchTokenizer"]], "thaisentencesegmentor (class in pythainlp.tokenize.thaisumcut)": [[10, "id5"], [10, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor"]], "tokenizer (class in pythainlp.tokenize)": [[10, "pythainlp.tokenize.Tokenizer"]], "__init__() (pythainlp.tokenize.tokenizer method)": [[10, "pythainlp.tokenize.Tokenizer.__init__"]], "__init__() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[10, "id9"], [10, "pythainlp.tokenize.attacut.AttacutTokenizer.__init__"]], "__init__() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[10, "pythainlp.tokenize.longest.LongestMatchTokenizer.__init__"]], "__init__() (pythainlp.tokenize.multi_cut.latticestring method)": [[10, "pythainlp.tokenize.multi_cut.LatticeString.__init__"]], "clause_tokenize() (in module pythainlp.tokenize)": [[10, "pythainlp.tokenize.clause_tokenize"]], "extract_features() (in module pythainlp.tokenize.crfcut)": [[10, "id0"], [10, "pythainlp.tokenize.crfcut.extract_features"]], "find_all_segment() (in module pythainlp.tokenize.multi_cut)": [[10, "id14"], [10, "pythainlp.tokenize.multi_cut.find_all_segment"]], "list_to_string() (in module pythainlp.tokenize.thaisumcut)": [[10, "id3"], [10, "pythainlp.tokenize.thaisumcut.list_to_string"]], "load_dict() (in module pythainlp.tokenize.nlpo3)": [[10, "id16"], [10, "pythainlp.tokenize.nlpo3.load_dict"]], "middle_cut() (in module pythainlp.tokenize.thaisumcut)": [[10, "id4"], [10, "pythainlp.tokenize.thaisumcut.middle_cut"]], "mmcut() (in module pythainlp.tokenize.multi_cut)": [[10, "pythainlp.tokenize.multi_cut.mmcut"]], "pythainlp.tokenize.attacut": [[10, "module-pythainlp.tokenize.attacut"]], "pythainlp.tokenize.crfcut": [[10, "module-pythainlp.tokenize.crfcut"]], "pythainlp.tokenize.deepcut": [[10, "module-pythainlp.tokenize.deepcut"]], "pythainlp.tokenize.etcc": [[10, "module-pythainlp.tokenize.etcc"]], "pythainlp.tokenize.longest": [[10, "module-pythainlp.tokenize.longest"]], "pythainlp.tokenize.multi_cut": [[10, "module-pythainlp.tokenize.multi_cut"]], "pythainlp.tokenize.nercut": [[10, "module-pythainlp.tokenize.nercut"]], "pythainlp.tokenize.newmm": [[10, "module-pythainlp.tokenize.newmm"]], "pythainlp.tokenize.nlpo3": [[10, "module-pythainlp.tokenize.nlpo3"]], "pythainlp.tokenize.oskut": [[10, "module-pythainlp.tokenize.oskut"]], "pythainlp.tokenize.pyicu": [[10, "module-pythainlp.tokenize.pyicu"]], "pythainlp.tokenize.sefr_cut": [[10, "module-pythainlp.tokenize.sefr_cut"]], "pythainlp.tokenize.tcc": [[10, "module-pythainlp.tokenize.tcc"]], "pythainlp.tokenize.thaisumcut": [[10, "module-pythainlp.tokenize.thaisumcut"]], "segment() (in module pythainlp.tokenize.attacut)": [[10, "pythainlp.tokenize.attacut.segment"]], "segment() (in module pythainlp.tokenize.crfcut)": [[10, "id2"], [10, "pythainlp.tokenize.crfcut.segment"]], "segment() (in module pythainlp.tokenize.deepcut)": [[10, "pythainlp.tokenize.deepcut.segment"]], "segment() (in module pythainlp.tokenize.etcc)": [[10, "id31"], [10, "pythainlp.tokenize.etcc.segment"]], "segment() (in module pythainlp.tokenize.longest)": [[10, "id19"], [10, "pythainlp.tokenize.longest.segment"]], "segment() (in module pythainlp.tokenize.multi_cut)": [[10, "id13"], [10, "pythainlp.tokenize.multi_cut.segment"]], "segment() (in module pythainlp.tokenize.nercut)": [[10, "id22"], [10, "pythainlp.tokenize.nercut.segment"]], "segment() (in module pythainlp.tokenize.newmm)": [[10, "id27"], [10, "pythainlp.tokenize.newmm.segment"]], "segment() (in module pythainlp.tokenize.nlpo3)": [[10, "id17"], [10, "pythainlp.tokenize.nlpo3.segment"]], "segment() (in module pythainlp.tokenize.oskut)": [[10, "pythainlp.tokenize.oskut.segment"]], "segment() (in module pythainlp.tokenize.pyicu)": [[10, "pythainlp.tokenize.pyicu.segment"]], "segment() (in module pythainlp.tokenize.sefr_cut)": [[10, "pythainlp.tokenize.sefr_cut.segment"]], "segment() (in module pythainlp.tokenize.tcc)": [[10, "id28"], [10, "pythainlp.tokenize.tcc.segment"]], "segment() (in module pythainlp.tokenize.tcc_p)": [[10, "pythainlp.tokenize.tcc_p.segment"]], "sent_tokenize() (in module pythainlp.tokenize)": [[10, "pythainlp.tokenize.sent_tokenize"]], "set_tokenize_engine() (pythainlp.tokenize.tokenizer method)": [[10, "pythainlp.tokenize.Tokenizer.set_tokenize_engine"]], "split_into_sentences() (pythainlp.tokenize.thaisumcut.thaisentencesegmentor method)": [[10, "id6"], [10, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor.split_into_sentences"]], "subword_tokenize() (in module pythainlp.tokenize)": [[10, "pythainlp.tokenize.subword_tokenize"]], "tcc() (in module pythainlp.tokenize.tcc)": [[10, "id29"], [10, "pythainlp.tokenize.tcc.tcc"]], "tcc() (in module pythainlp.tokenize.tcc_p)": [[10, "pythainlp.tokenize.tcc_p.tcc"]], "tcc_pos() (in module pythainlp.tokenize.tcc)": [[10, "id30"], [10, "pythainlp.tokenize.tcc.tcc_pos"]], "tcc_pos() (in module pythainlp.tokenize.tcc_p)": [[10, "pythainlp.tokenize.tcc_p.tcc_pos"]], "tokenize() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[10, "id10"], [10, "pythainlp.tokenize.attacut.AttacutTokenizer.tokenize"]], "tokenize() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[10, "pythainlp.tokenize.longest.LongestMatchTokenizer.tokenize"]], "word_detokenize() (in module pythainlp.tokenize)": [[10, "pythainlp.tokenize.word_detokenize"]], "word_tokenize() (in module pythainlp.tokenize)": [[10, "pythainlp.tokenize.word_tokenize"]], "word_tokenize() (pythainlp.tokenize.tokenizer method)": [[10, "pythainlp.tokenize.Tokenizer.word_tokenize"]], "pythainlp_data_dir": [[11, "index-0"], [22, "envvar-PYTHAINLP_DATA_DIR"]], "environment variable": [[11, "index-0"], [22, "envvar-PYTHAINLP_DATA_DIR"], [22, "envvar-PYTHAINLP_READ_MODE"]], "get_full_data_path() (in module pythainlp.tools)": [[11, "pythainlp.tools.get_full_data_path"]], "get_pythainlp_data_path() (in module pythainlp.tools)": [[11, "pythainlp.tools.get_pythainlp_data_path"]], "get_pythainlp_path() (in module pythainlp.tools)": [[11, "pythainlp.tools.get_pythainlp_path"]], "misspell() (in module pythainlp.tools.misspell)": [[11, "pythainlp.tools.misspell.misspell"]], "enthtranslator (class in pythainlp.translate.en_th)": [[12, "pythainlp.translate.en_th.EnThTranslator"]], "thentranslator (class in pythainlp.translate.en_th)": [[12, "pythainlp.translate.en_th.ThEnTranslator"]], "thfrtranslator (class in pythainlp.translate.th_fr)": [[12, "pythainlp.translate.th_fr.ThFrTranslator"]], "thzhtranslator (class in pythainlp.translate.zh_th)": [[12, "pythainlp.translate.zh_th.ThZhTranslator"]], "translate (class in pythainlp.translate)": [[12, "pythainlp.translate.Translate"]], "zhthtranslator (class in pythainlp.translate.zh_th)": [[12, "pythainlp.translate.zh_th.ZhThTranslator"]], "__init__() (pythainlp.translate.translate method)": [[12, "pythainlp.translate.Translate.__init__"]], "__init__() (pythainlp.translate.en_th.enthtranslator method)": [[12, "pythainlp.translate.en_th.EnThTranslator.__init__"]], "__init__() (pythainlp.translate.en_th.thentranslator method)": [[12, "pythainlp.translate.en_th.ThEnTranslator.__init__"]], "__init__() (pythainlp.translate.th_fr.thfrtranslator method)": [[12, "pythainlp.translate.th_fr.ThFrTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.thzhtranslator method)": [[12, "pythainlp.translate.zh_th.ThZhTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.zhthtranslator method)": [[12, "pythainlp.translate.zh_th.ZhThTranslator.__init__"]], "download_model_all() (in module pythainlp.translate.en_th)": [[12, "pythainlp.translate.en_th.download_model_all"]], "load_model() (pythainlp.translate.translate method)": [[12, "pythainlp.translate.Translate.load_model"]], "translate() (pythainlp.translate.translate method)": [[12, "pythainlp.translate.Translate.translate"]], "translate() (pythainlp.translate.en_th.enthtranslator method)": [[12, "pythainlp.translate.en_th.EnThTranslator.translate"]], "translate() (pythainlp.translate.en_th.thentranslator method)": [[12, "pythainlp.translate.en_th.ThEnTranslator.translate"]], "translate() (pythainlp.translate.th_fr.thfrtranslator method)": [[12, "pythainlp.translate.th_fr.ThFrTranslator.translate"]], "translate() (pythainlp.translate.zh_th.thzhtranslator method)": [[12, "pythainlp.translate.zh_th.ThZhTranslator.translate"]], "translate() (pythainlp.translate.zh_th.zhthtranslator method)": [[12, "pythainlp.translate.zh_th.ZhThTranslator.translate"]], "wunsentransliterate (class in pythainlp.transliterate.wunsen)": [[13, "pythainlp.transliterate.wunsen.WunsenTransliterate"]], "__init__() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[13, "pythainlp.transliterate.wunsen.WunsenTransliterate.__init__"]], "pronunciate() (in module pythainlp.transliterate)": [[13, "pythainlp.transliterate.pronunciate"]], "puan() (in module pythainlp.transliterate)": [[13, "pythainlp.transliterate.puan"]], "pythainlp.transliterate.ipa": [[13, "module-pythainlp.transliterate.ipa"]], "pythainlp.transliterate.iso_11940": [[13, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.transliterate.pyicu": [[13, "module-pythainlp.transliterate.pyicu"]], "pythainlp.transliterate.royin.romanize": [[13, "module-pythainlp.transliterate.royin.romanize"]], "pythainlp.transliterate.thai2rom.romanize": [[13, "module-pythainlp.transliterate.thai2rom.romanize"]], "pythainlp.transliterate.thaig2p.transliterate": [[13, "module-pythainlp.transliterate.thaig2p.transliterate"]], "romanize() (in module pythainlp.transliterate)": [[13, "pythainlp.transliterate.romanize"]], "romanize() (in module pythainlp.transliterate.tltk)": [[13, "pythainlp.transliterate.tltk.romanize"]], "tltk_g2p() (in module pythainlp.transliterate.tltk)": [[13, "pythainlp.transliterate.tltk.tltk_g2p"]], "tltk_ipa() (in module pythainlp.transliterate.tltk)": [[13, "pythainlp.transliterate.tltk.tltk_ipa"]], "trans_list() (in module pythainlp.transliterate.ipa)": [[13, "id5"], [13, "pythainlp.transliterate.ipa.trans_list"]], "transliterate() (in module pythainlp.transliterate)": [[13, "pythainlp.transliterate.transliterate"]], "transliterate() (in module pythainlp.transliterate.ipa)": [[13, "id4"], [13, "pythainlp.transliterate.ipa.transliterate"]], "transliterate() (in module pythainlp.transliterate.iso_11940)": [[13, "pythainlp.transliterate.iso_11940.transliterate"]], "transliterate() (in module pythainlp.transliterate.pyicu)": [[13, "id0"], [13, "pythainlp.transliterate.pyicu.transliterate"]], "transliterate() (in module pythainlp.transliterate.thaig2p)": [[13, "pythainlp.transliterate.thaig2p.transliterate"]], "transliterate() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[13, "pythainlp.transliterate.wunsen.WunsenTransliterate.transliterate"]], "xsampa_list() (in module pythainlp.transliterate.ipa)": [[13, "id6"], [13, "pythainlp.transliterate.ipa.xsampa_list"]], "thaitokenizer (class in pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.ThaiTokenizer"]], "__init__() (pythainlp.ulmfit.thaitokenizer method)": [[14, "pythainlp.ulmfit.ThaiTokenizer.__init__"]], "add_special_cases() (pythainlp.ulmfit.thaitokenizer method)": [[14, "pythainlp.ulmfit.ThaiTokenizer.add_special_cases"]], "document_vector() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.document_vector"]], "fix_html() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.fix_html"]], "lowercase_all() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.lowercase_all"]], "merge_wgts() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.merge_wgts"]], "process_thai() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.process_thai"]], "remove_space() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.remove_space"]], "replace_rep_after() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.replace_rep_after"]], "replace_rep_nonum() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.replace_rep_nonum"]], "replace_wrep_post() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.replace_wrep_post"]], "replace_wrep_post_nonum() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.replace_wrep_post_nonum"]], "rm_brackets() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.rm_brackets"]], "rm_useless_newlines() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.rm_useless_newlines"]], "rm_useless_spaces() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.rm_useless_spaces"]], "spec_add_spaces() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.spec_add_spaces"]], "tokenizer() (pythainlp.ulmfit.thaitokenizer static method)": [[14, "pythainlp.ulmfit.ThaiTokenizer.tokenizer"]], "ungroup_emoji() (in module pythainlp.ulmfit)": [[14, "pythainlp.ulmfit.ungroup_emoji"]], "trie (class in pythainlp.util)": [[15, "pythainlp.util.Trie"]], "trie.node (class in pythainlp.util)": [[15, "pythainlp.util.Trie.Node"]], "__init__() (pythainlp.util.trie method)": [[15, "pythainlp.util.Trie.__init__"]], "__init__() (pythainlp.util.trie.node method)": [[15, "pythainlp.util.Trie.Node.__init__"]], "add() (pythainlp.util.trie method)": [[15, "pythainlp.util.Trie.add"]], "arabic_digit_to_thai_digit() (in module pythainlp.util)": [[15, "pythainlp.util.arabic_digit_to_thai_digit"]], "bahttext() (in module pythainlp.util)": [[15, "pythainlp.util.bahttext"]], "children (pythainlp.util.trie.node attribute)": [[15, "pythainlp.util.Trie.Node.children"]], "collate() (in module pythainlp.util)": [[15, "pythainlp.util.collate"]], "convert_years() (in module pythainlp.util)": [[15, "pythainlp.util.convert_years"]], "count_thai_chars() (in module pythainlp.util)": [[15, "pythainlp.util.count_thai_chars"]], "countthai() (in module pythainlp.util)": [[15, "pythainlp.util.countthai"]], "dict_trie() (in module pythainlp.util)": [[15, "pythainlp.util.dict_trie"]], "digit_to_text() (in module pythainlp.util)": [[15, "pythainlp.util.digit_to_text"]], "display_thai_char() (in module pythainlp.util)": [[15, "pythainlp.util.display_thai_char"]], "emoji_to_thai() (in module pythainlp.util)": [[15, "pythainlp.util.emoji_to_thai"]], "end (pythainlp.util.trie.node attribute)": [[15, "pythainlp.util.Trie.Node.end"]], "eng_to_thai() (in module pythainlp.util)": [[15, "pythainlp.util.eng_to_thai"]], "find_keyword() (in module pythainlp.util)": [[15, "pythainlp.util.find_keyword"]], "ipa_to_rtgs() (in module pythainlp.util)": [[15, "pythainlp.util.ipa_to_rtgs"]], "is_native_thai() (in module pythainlp.util)": [[15, "pythainlp.util.is_native_thai"]], "isthai() (in module pythainlp.util)": [[15, "pythainlp.util.isthai"]], "isthaichar() (in module pythainlp.util)": [[15, "pythainlp.util.isthaichar"]], "maiyamok() (in module pythainlp.util)": [[15, "pythainlp.util.maiyamok"]], "nectec_to_ipa() (in module pythainlp.util)": [[15, "pythainlp.util.nectec_to_ipa"]], "normalize() (in module pythainlp.util)": [[15, "pythainlp.util.normalize"]], "now_reign_year() (in module pythainlp.util)": [[15, "pythainlp.util.now_reign_year"]], "num_to_thaiword() (in module pythainlp.util)": [[15, "pythainlp.util.num_to_thaiword"]], "prefixes() (pythainlp.util.trie method)": [[15, "pythainlp.util.Trie.prefixes"]], "rank() (in module pythainlp.util)": [[15, "pythainlp.util.rank"]], "reign_year_to_ad() (in module pythainlp.util)": [[15, "pythainlp.util.reign_year_to_ad"]], "remove() (pythainlp.util.trie method)": [[15, "pythainlp.util.Trie.remove"]], "remove_dangling() (in module pythainlp.util)": [[15, "pythainlp.util.remove_dangling"]], "remove_dup_spaces() (in module pythainlp.util)": [[15, "pythainlp.util.remove_dup_spaces"]], "remove_repeat_vowels() (in module pythainlp.util)": [[15, "pythainlp.util.remove_repeat_vowels"]], "remove_tone_ipa() (in module pythainlp.util)": [[15, "pythainlp.util.remove_tone_ipa"]], "remove_tonemark() (in module pythainlp.util)": [[15, "pythainlp.util.remove_tonemark"]], "remove_zw() (in module pythainlp.util)": [[15, "pythainlp.util.remove_zw"]], "reorder_vowels() (in module pythainlp.util)": [[15, "pythainlp.util.reorder_vowels"]], "sound_syllable() (in module pythainlp.util)": [[15, "pythainlp.util.sound_syllable"]], "syllable_length() (in module pythainlp.util)": [[15, "pythainlp.util.syllable_length"]], "syllable_open_close_detector() (in module pythainlp.util)": [[15, "pythainlp.util.syllable_open_close_detector"]], "text_to_arabic_digit() (in module pythainlp.util)": [[15, "pythainlp.util.text_to_arabic_digit"]], "text_to_num() (in module pythainlp.util)": [[15, "pythainlp.util.text_to_num"]], "text_to_thai_digit() (in module pythainlp.util)": [[15, "pythainlp.util.text_to_thai_digit"]], "thai_digit_to_arabic_digit() (in module pythainlp.util)": [[15, "pythainlp.util.thai_digit_to_arabic_digit"]], "thai_strftime() (in module pythainlp.util)": [[15, "pythainlp.util.thai_strftime"]], "thai_strptime() (in module pythainlp.util)": [[15, "pythainlp.util.thai_strptime"]], "thai_to_eng() (in module pythainlp.util)": [[15, "pythainlp.util.thai_to_eng"]], "thai_word_tone_detector() (in module pythainlp.util)": [[15, "pythainlp.util.thai_word_tone_detector"]], "thaiword_to_date() (in module pythainlp.util)": [[15, "pythainlp.util.thaiword_to_date"]], "thaiword_to_num() (in module pythainlp.util)": [[15, "pythainlp.util.thaiword_to_num"]], "thaiword_to_time() (in module pythainlp.util)": [[15, "pythainlp.util.thaiword_to_time"]], "time_to_thaiword() (in module pythainlp.util)": [[15, "pythainlp.util.time_to_thaiword"]], "tone_detector() (in module pythainlp.util)": [[15, "pythainlp.util.tone_detector"]], "words_to_num() (in module pythainlp.util)": [[15, "pythainlp.util.words_to_num"]], "namedentityrecognition (class in pythainlp.wangchanberta)": [[16, "pythainlp.wangchanberta.NamedEntityRecognition"]], "thainametagger (class in pythainlp.wangchanberta)": [[16, "pythainlp.wangchanberta.ThaiNameTagger"]], "__init__() (pythainlp.wangchanberta.namedentityrecognition method)": [[16, "pythainlp.wangchanberta.NamedEntityRecognition.__init__"]], "__init__() (pythainlp.wangchanberta.thainametagger method)": [[16, "pythainlp.wangchanberta.ThaiNameTagger.__init__"]], "get_ner() (pythainlp.wangchanberta.namedentityrecognition method)": [[16, "pythainlp.wangchanberta.NamedEntityRecognition.get_ner"]], "get_ner() (pythainlp.wangchanberta.thainametagger method)": [[16, "pythainlp.wangchanberta.ThaiNameTagger.get_ner"]], "segment() (in module pythainlp.wangchanberta)": [[16, "pythainlp.wangchanberta.segment"]], "wordvector (class in pythainlp.word_vector)": [[17, "pythainlp.word_vector.WordVector"]], "__init__() (pythainlp.word_vector.wordvector method)": [[17, "pythainlp.word_vector.WordVector.__init__"]], "doesnt_match() (pythainlp.word_vector.wordvector method)": [[17, "pythainlp.word_vector.WordVector.doesnt_match"]], "get_model() (pythainlp.word_vector.wordvector method)": [[17, "pythainlp.word_vector.WordVector.get_model"]], "load_wordvector() (pythainlp.word_vector.wordvector method)": [[17, "pythainlp.word_vector.WordVector.load_wordvector"]], "most_similar_cosmul() (pythainlp.word_vector.wordvector method)": [[17, "pythainlp.word_vector.WordVector.most_similar_cosmul"]], "sentence_vectorizer() (pythainlp.word_vector.wordvector method)": [[17, "pythainlp.word_vector.WordVector.sentence_vectorizer"]], "similarity() (pythainlp.word_vector.wordvector method)": [[17, "pythainlp.word_vector.WordVector.similarity"]], "pythainlp_read_mode": [[22, "envvar-PYTHAINLP_READ_MODE"]]}})